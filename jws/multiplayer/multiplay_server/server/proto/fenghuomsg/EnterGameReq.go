// automatically generated by the FlatBuffers compiler, do not modify

package fenghuomsg

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// [RPC]进入同步战斗服务器, 重连也适用
type EnterGameReq struct {
	_tab flatbuffers.Table
}

func GetRootAsEnterGameReq(buf []byte, offset flatbuffers.UOffsetT) *EnterGameReq {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &EnterGameReq{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *EnterGameReq) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

///玩家账号ID
func (rcv *EnterGameReq) AccountId() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

///玩家账号ID
///请求进入房间ID
func (rcv *EnterGameReq) RoomID() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

///请求进入房间ID
///房间密码
func (rcv *EnterGameReq) Secret() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

///房间密码
func EnterGameReqStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func EnterGameReqAddAccountId(builder *flatbuffers.Builder, accountId flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(accountId), 0)
}
func EnterGameReqAddRoomID(builder *flatbuffers.Builder, roomID flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(roomID), 0)
}
func EnterGameReqAddSecret(builder *flatbuffers.Builder, secret flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(secret), 0)
}
func EnterGameReqEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}

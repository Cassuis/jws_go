// automatically generated by the FlatBuffers compiler, do not modify

namespace multiplayMsg
{

using System;
using FlatBuffers;

/// [SceneActivity]伤害\损失HP通知
public sealed class SceneActivity : Table {
  public static SceneActivity GetRootAsSceneActivity(ByteBuffer _bb) { return GetRootAsSceneActivity(_bb, new SceneActivity()); }
  public static SceneActivity GetRootAsSceneActivity(ByteBuffer _bb, SceneActivity obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public SceneActivity __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int Typ { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int Param { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<SceneActivity> CreateSceneActivity(FlatBufferBuilder builder,
      int typ = 0,
      int param = 0) {
    builder.StartObject(2);
    SceneActivity.AddParam(builder, param);
    SceneActivity.AddTyp(builder, typ);
    return SceneActivity.EndSceneActivity(builder);
  }

  public static void StartSceneActivity(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddTyp(FlatBufferBuilder builder, int typ) { builder.AddInt(0, typ, 0); }
  public static void AddParam(FlatBufferBuilder builder, int param) { builder.AddInt(1, param, 0); }
  public static Offset<SceneActivity> EndSceneActivity(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SceneActivity>(o);
  }
  public static void FinishSceneActivityBuffer(FlatBufferBuilder builder, Offset<SceneActivity> offset) { builder.Finish(offset.Value); }
};


}

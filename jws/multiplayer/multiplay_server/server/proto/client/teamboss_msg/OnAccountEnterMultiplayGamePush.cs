// automatically generated by the FlatBuffers compiler, do not modify

namespace teamboss_msg
{

using System;
using FlatBuffers;

/// [Push]进入玩家信息通知 <不需要了>
/// multi -> client 战斗信息
public sealed class OnAccountEnterMultiplayGamePush : Table {
  public static OnAccountEnterMultiplayGamePush GetRootAsOnAccountEnterMultiplayGamePush(ByteBuffer _bb) { return GetRootAsOnAccountEnterMultiplayGamePush(_bb, new OnAccountEnterMultiplayGamePush()); }
  public static OnAccountEnterMultiplayGamePush GetRootAsOnAccountEnterMultiplayGamePush(ByteBuffer _bb, OnAccountEnterMultiplayGamePush obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public OnAccountEnterMultiplayGamePush __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  ///当前房间中玩家的状态
  public teamboss_msg.PlayerState GetPlayerStat(int j) { return GetPlayerStat(new teamboss_msg.PlayerState(), j); }
  public teamboss_msg.PlayerState GetPlayerStat(teamboss_msg.PlayerState obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int PlayerStatLength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }
  ///当前房间中玩家的数据
  public teamboss_msg.AccountInfo GetAccDatas(int j) { return GetAccDatas(new teamboss_msg.AccountInfo(), j); }
  public teamboss_msg.AccountInfo GetAccDatas(teamboss_msg.AccountInfo obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int AccDatasLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<OnAccountEnterMultiplayGamePush> CreateOnAccountEnterMultiplayGamePush(FlatBufferBuilder builder,
      VectorOffset playerStatOffset = default(VectorOffset),
      VectorOffset accDatasOffset = default(VectorOffset)) {
    builder.StartObject(2);
    OnAccountEnterMultiplayGamePush.AddAccDatas(builder, accDatasOffset);
    OnAccountEnterMultiplayGamePush.AddPlayerStat(builder, playerStatOffset);
    return OnAccountEnterMultiplayGamePush.EndOnAccountEnterMultiplayGamePush(builder);
  }

  public static void StartOnAccountEnterMultiplayGamePush(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPlayerStat(FlatBufferBuilder builder, VectorOffset playerStatOffset) { builder.AddOffset(0, playerStatOffset.Value, 0); }
  public static VectorOffset CreatePlayerStatVector(FlatBufferBuilder builder, Offset<teamboss_msg.PlayerState>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartPlayerStatVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAccDatas(FlatBufferBuilder builder, VectorOffset accDatasOffset) { builder.AddOffset(1, accDatasOffset.Value, 0); }
  public static VectorOffset CreateAccDatasVector(FlatBufferBuilder builder, Offset<teamboss_msg.AccountInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartAccDatasVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<OnAccountEnterMultiplayGamePush> EndOnAccountEnterMultiplayGamePush(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<OnAccountEnterMultiplayGamePush>(o);
  }
  public static void FinishOnAccountEnterMultiplayGamePushBuffer(FlatBufferBuilder builder, Offset<OnAccountEnterMultiplayGamePush> offset) { builder.Finish(offset.Value); }
};


}

// automatically generated by the FlatBuffers compiler, do not modify

namespace teamboss_msg
{

using System;
using FlatBuffers;

/// 玩家装备数据
public sealed class EquipInfo : Table {
  public static EquipInfo GetRootAsEquipInfo(ByteBuffer _bb) { return GetRootAsEquipInfo(_bb, new EquipInfo()); }
  public static EquipInfo GetRootAsEquipInfo(ByteBuffer _bb, EquipInfo obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public EquipInfo __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  ///当前战斗状态(等待开始\已开始\已结束)
  public uint Id { get { int o = __offset(4); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  ///当前状态开始时间
  public string Tableid { get { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetTableidBytes() { return __vector_as_arraysegment(6); }
  ///当前状态结束时间
  public string Itemid { get { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetItemidBytes() { return __vector_as_arraysegment(8); }
  ///战斗难度
  public long Count { get { int o = __offset(10); return o != 0 ? bb.GetLong(o + bb_pos) : (long)0; } }
  ///战斗场景信息
  public string Data { get { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetDataBytes() { return __vector_as_arraysegment(12); }

  public static Offset<EquipInfo> CreateEquipInfo(FlatBufferBuilder builder,
      uint id = 0,
      StringOffset tableidOffset = default(StringOffset),
      StringOffset itemidOffset = default(StringOffset),
      long count = 0,
      StringOffset dataOffset = default(StringOffset)) {
    builder.StartObject(5);
    EquipInfo.AddCount(builder, count);
    EquipInfo.AddData(builder, dataOffset);
    EquipInfo.AddItemid(builder, itemidOffset);
    EquipInfo.AddTableid(builder, tableidOffset);
    EquipInfo.AddId(builder, id);
    return EquipInfo.EndEquipInfo(builder);
  }

  public static void StartEquipInfo(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddId(FlatBufferBuilder builder, uint id) { builder.AddUint(0, id, 0); }
  public static void AddTableid(FlatBufferBuilder builder, StringOffset tableidOffset) { builder.AddOffset(1, tableidOffset.Value, 0); }
  public static void AddItemid(FlatBufferBuilder builder, StringOffset itemidOffset) { builder.AddOffset(2, itemidOffset.Value, 0); }
  public static void AddCount(FlatBufferBuilder builder, long count) { builder.AddLong(3, count, 0); }
  public static void AddData(FlatBufferBuilder builder, StringOffset dataOffset) { builder.AddOffset(4, dataOffset.Value, 0); }
  public static Offset<EquipInfo> EndEquipInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquipInfo>(o);
  }
};


}

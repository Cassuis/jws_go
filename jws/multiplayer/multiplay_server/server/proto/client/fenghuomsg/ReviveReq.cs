// automatically generated by the FlatBuffers compiler, do not modify

namespace fenghuomsg
{

using System;
using FlatBuffers;

public sealed class ReviveReq : Table {
  public static ReviveReq GetRootAsReviveReq(ByteBuffer _bb) { return GetRootAsReviveReq(_bb, new ReviveReq()); }
  public static ReviveReq GetRootAsReviveReq(ByteBuffer _bb, ReviveReq obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ReviveReq __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  ///玩家账号ID
  public string AccountId { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetAccountIdBytes() { return __vector_as_arraysegment(4); }
  ///房间密码
  public int Hp { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int Idx { get { int o = __offset(8); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<ReviveReq> CreateReviveReq(FlatBufferBuilder builder,
      StringOffset accountIdOffset = default(StringOffset),
      int hp = 0,
      int idx = 0) {
    builder.StartObject(3);
    ReviveReq.AddIdx(builder, idx);
    ReviveReq.AddHp(builder, hp);
    ReviveReq.AddAccountId(builder, accountIdOffset);
    return ReviveReq.EndReviveReq(builder);
  }

  public static void StartReviveReq(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddAccountId(FlatBufferBuilder builder, StringOffset accountIdOffset) { builder.AddOffset(0, accountIdOffset.Value, 0); }
  public static void AddHp(FlatBufferBuilder builder, int hp) { builder.AddInt(1, hp, 0); }
  public static void AddIdx(FlatBufferBuilder builder, int idx) { builder.AddInt(2, idx, 0); }
  public static Offset<ReviveReq> EndReviveReq(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReviveReq>(o);
  }
};


}

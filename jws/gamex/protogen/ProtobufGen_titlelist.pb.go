// Code generated by protoc-gen-go.
// source: ProtobufGen_titlelist.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type TITLELIST struct {
	// * 称号ID
	TitleID *string `protobuf:"bytes,1,req,def=" json:"TitleID,omitempty"`
	// * google成就ID
	GoogleAchievementID *string `protobuf:"bytes,18,opt,def=" json:"GoogleAchievementID,omitempty"`
	// * 前端是否显示（0不显示）
	IsShow *uint32 `protobuf:"varint,19,opt,def=0" json:"IsShow,omitempty"`
	// * 称号IDS
	TitleIDS *string `protobuf:"bytes,2,opt,def=" json:"TitleIDS,omitempty"`
	// * 称号条件类型
	TitleConditionType *uint32 `protobuf:"varint,3,opt,def=0" json:"TitleConditionType,omitempty"`
	// * 称号细分类型
	FCType *uint32 `protobuf:"varint,4,opt,def=0" json:"FCType,omitempty"`
	// * 称号激活条件1
	FCValueIP1 *uint32 `protobuf:"varint,5,opt,def=0" json:"FCValueIP1,omitempty"`
	// * 称号激活条件2
	FCValueIP2 *uint32 `protobuf:"varint,6,opt,def=0" json:"FCValueIP2,omitempty"`
	// * 称号激活条件3
	FCValueIP3 *string `protobuf:"bytes,20,opt,def=" json:"FCValueIP3,omitempty"`
	// * 攻击力
	Attack *float32 `protobuf:"fixed32,7,opt,def=0" json:"Attack,omitempty"`
	// * 防御力
	Defense *float32 `protobuf:"fixed32,8,opt,def=0" json:"Defense,omitempty"`
	// * 血量
	HP *float32 `protobuf:"fixed32,9,opt,def=0" json:"HP,omitempty"`
	// * 称号显示类型
	TitleShowType *uint32 `protobuf:"varint,10,opt,def=0" json:"TitleShowType,omitempty"`
	// * 称号文字颜色
	TitleWordColor *string `protobuf:"bytes,17,opt,def=" json:"TitleWordColor,omitempty"`
	// * 称号图片地址
	TitlePath *string `protobuf:"bytes,11,opt,def=" json:"TitlePath,omitempty"`
	// * 获取条件IDS
	TitleConditionIDS *string `protobuf:"bytes,12,opt,def=" json:"TitleConditionIDS,omitempty"`
	// * 获取时限IDS(暂时没用上）
	TitleTimeIDS *string `protobuf:"bytes,13,opt,def=" json:"TitleTimeIDS,omitempty"`
	// * 提示界面用IDS
	TitleGetIDS *string `protobuf:"bytes,14,opt,def=" json:"TitleGetIDS,omitempty"`
	// * 消耗道具
	CostItem *string `protobuf:"bytes,15,opt,def=" json:"CostItem,omitempty"`
	// * 消耗数量
	CostNum          *uint32 `protobuf:"varint,16,opt,def=0" json:"CostNum,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TITLELIST) Reset()         { *m = TITLELIST{} }
func (m *TITLELIST) String() string { return proto.CompactTextString(m) }
func (*TITLELIST) ProtoMessage()    {}

const Default_TITLELIST_IsShow uint32 = 0
const Default_TITLELIST_TitleConditionType uint32 = 0
const Default_TITLELIST_FCType uint32 = 0
const Default_TITLELIST_FCValueIP1 uint32 = 0
const Default_TITLELIST_FCValueIP2 uint32 = 0
const Default_TITLELIST_Attack float32 = 0
const Default_TITLELIST_Defense float32 = 0
const Default_TITLELIST_HP float32 = 0
const Default_TITLELIST_TitleShowType uint32 = 0
const Default_TITLELIST_CostNum uint32 = 0

func (m *TITLELIST) GetTitleID() string {
	if m != nil && m.TitleID != nil {
		return *m.TitleID
	}
	return ""
}

func (m *TITLELIST) GetGoogleAchievementID() string {
	if m != nil && m.GoogleAchievementID != nil {
		return *m.GoogleAchievementID
	}
	return ""
}

func (m *TITLELIST) GetIsShow() uint32 {
	if m != nil && m.IsShow != nil {
		return *m.IsShow
	}
	return Default_TITLELIST_IsShow
}

func (m *TITLELIST) GetTitleIDS() string {
	if m != nil && m.TitleIDS != nil {
		return *m.TitleIDS
	}
	return ""
}

func (m *TITLELIST) GetTitleConditionType() uint32 {
	if m != nil && m.TitleConditionType != nil {
		return *m.TitleConditionType
	}
	return Default_TITLELIST_TitleConditionType
}

func (m *TITLELIST) GetFCType() uint32 {
	if m != nil && m.FCType != nil {
		return *m.FCType
	}
	return Default_TITLELIST_FCType
}

func (m *TITLELIST) GetFCValueIP1() uint32 {
	if m != nil && m.FCValueIP1 != nil {
		return *m.FCValueIP1
	}
	return Default_TITLELIST_FCValueIP1
}

func (m *TITLELIST) GetFCValueIP2() uint32 {
	if m != nil && m.FCValueIP2 != nil {
		return *m.FCValueIP2
	}
	return Default_TITLELIST_FCValueIP2
}

func (m *TITLELIST) GetFCValueIP3() string {
	if m != nil && m.FCValueIP3 != nil {
		return *m.FCValueIP3
	}
	return ""
}

func (m *TITLELIST) GetAttack() float32 {
	if m != nil && m.Attack != nil {
		return *m.Attack
	}
	return Default_TITLELIST_Attack
}

func (m *TITLELIST) GetDefense() float32 {
	if m != nil && m.Defense != nil {
		return *m.Defense
	}
	return Default_TITLELIST_Defense
}

func (m *TITLELIST) GetHP() float32 {
	if m != nil && m.HP != nil {
		return *m.HP
	}
	return Default_TITLELIST_HP
}

func (m *TITLELIST) GetTitleShowType() uint32 {
	if m != nil && m.TitleShowType != nil {
		return *m.TitleShowType
	}
	return Default_TITLELIST_TitleShowType
}

func (m *TITLELIST) GetTitleWordColor() string {
	if m != nil && m.TitleWordColor != nil {
		return *m.TitleWordColor
	}
	return ""
}

func (m *TITLELIST) GetTitlePath() string {
	if m != nil && m.TitlePath != nil {
		return *m.TitlePath
	}
	return ""
}

func (m *TITLELIST) GetTitleConditionIDS() string {
	if m != nil && m.TitleConditionIDS != nil {
		return *m.TitleConditionIDS
	}
	return ""
}

func (m *TITLELIST) GetTitleTimeIDS() string {
	if m != nil && m.TitleTimeIDS != nil {
		return *m.TitleTimeIDS
	}
	return ""
}

func (m *TITLELIST) GetTitleGetIDS() string {
	if m != nil && m.TitleGetIDS != nil {
		return *m.TitleGetIDS
	}
	return ""
}

func (m *TITLELIST) GetCostItem() string {
	if m != nil && m.CostItem != nil {
		return *m.CostItem
	}
	return ""
}

func (m *TITLELIST) GetCostNum() uint32 {
	if m != nil && m.CostNum != nil {
		return *m.CostNum
	}
	return Default_TITLELIST_CostNum
}

type TITLELIST_ARRAY struct {
	Items            []*TITLELIST `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *TITLELIST_ARRAY) Reset()         { *m = TITLELIST_ARRAY{} }
func (m *TITLELIST_ARRAY) String() string { return proto.CompactTextString(m) }
func (*TITLELIST_ARRAY) ProtoMessage()    {}

func (m *TITLELIST_ARRAY) GetItems() []*TITLELIST {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

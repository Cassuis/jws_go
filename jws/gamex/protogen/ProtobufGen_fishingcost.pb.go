// Code generated by protoc-gen-go.
// source: ProtobufGen_fishingcost.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type FISHINGCOST struct {
	// * 玩法ID
	GameModeID *uint32 `protobuf:"varint,1,req,def=0" json:"GameModeID,omitempty"`
	// * 初始消耗
	CostHC *uint32 `protobuf:"varint,2,opt,def=0" json:"CostHC,omitempty"`
	// * 累积消耗
	AddHC *uint32 `protobuf:"varint,3,opt,def=0" json:"AddHC,omitempty"`
	// * 累积额度上限
	Limit *uint32 `protobuf:"varint,4,opt,def=0" json:"Limit,omitempty"`
	// * 鱼池数量
	CountTips *uint32 `protobuf:"varint,5,opt,def=0" json:"CountTips,omitempty"`
	// * 草鞋物品ID
	ItemID *string `protobuf:"bytes,6,opt,def=" json:"ItemID,omitempty"`
	// * 奖励数量
	Amount *uint32 `protobuf:"varint,7,opt,def=0" json:"Amount,omitempty"`
	// * 草鞋掉落组
	LootDataID *string `protobuf:"bytes,8,opt,def=" json:"LootDataID,omitempty"`
	// * 草鞋奖励信息
	TipsIDS          *string `protobuf:"bytes,9,opt,def=" json:"TipsIDS,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FISHINGCOST) Reset()         { *m = FISHINGCOST{} }
func (m *FISHINGCOST) String() string { return proto.CompactTextString(m) }
func (*FISHINGCOST) ProtoMessage()    {}

const Default_FISHINGCOST_GameModeID uint32 = 0
const Default_FISHINGCOST_CostHC uint32 = 0
const Default_FISHINGCOST_AddHC uint32 = 0
const Default_FISHINGCOST_Limit uint32 = 0
const Default_FISHINGCOST_CountTips uint32 = 0
const Default_FISHINGCOST_Amount uint32 = 0

func (m *FISHINGCOST) GetGameModeID() uint32 {
	if m != nil && m.GameModeID != nil {
		return *m.GameModeID
	}
	return Default_FISHINGCOST_GameModeID
}

func (m *FISHINGCOST) GetCostHC() uint32 {
	if m != nil && m.CostHC != nil {
		return *m.CostHC
	}
	return Default_FISHINGCOST_CostHC
}

func (m *FISHINGCOST) GetAddHC() uint32 {
	if m != nil && m.AddHC != nil {
		return *m.AddHC
	}
	return Default_FISHINGCOST_AddHC
}

func (m *FISHINGCOST) GetLimit() uint32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return Default_FISHINGCOST_Limit
}

func (m *FISHINGCOST) GetCountTips() uint32 {
	if m != nil && m.CountTips != nil {
		return *m.CountTips
	}
	return Default_FISHINGCOST_CountTips
}

func (m *FISHINGCOST) GetItemID() string {
	if m != nil && m.ItemID != nil {
		return *m.ItemID
	}
	return ""
}

func (m *FISHINGCOST) GetAmount() uint32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return Default_FISHINGCOST_Amount
}

func (m *FISHINGCOST) GetLootDataID() string {
	if m != nil && m.LootDataID != nil {
		return *m.LootDataID
	}
	return ""
}

func (m *FISHINGCOST) GetTipsIDS() string {
	if m != nil && m.TipsIDS != nil {
		return *m.TipsIDS
	}
	return ""
}

type FISHINGCOST_ARRAY struct {
	Items            []*FISHINGCOST `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *FISHINGCOST_ARRAY) Reset()         { *m = FISHINGCOST_ARRAY{} }
func (m *FISHINGCOST_ARRAY) String() string { return proto.CompactTextString(m) }
func (*FISHINGCOST_ARRAY) ProtoMessage()    {}

func (m *FISHINGCOST_ARRAY) GetItems() []*FISHINGCOST {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

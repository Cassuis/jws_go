// Code generated by protoc-gen-go.
// source: ProtobufGen_tbossconfig.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type TBOSSCONFIG struct {
	// * 每天可以用钻石打开宝箱的次数
	HCOpenBoxNum *uint32 `protobuf:"varint,1,req,def=0" json:"HCOpenBoxNum,omitempty"`
	// * 最小开箱时间，单位秒
	BoxTimeMin *uint32 `protobuf:"varint,2,req,def=0" json:"BoxTimeMin,omitempty"`
	// * 最小单位花费钻石
	TimeMinHC *uint32 `protobuf:"varint,3,req,def=0" json:"TimeMinHC,omitempty"`
	// * 发送邀请CD时间，秒
	InviteColdDown *uint32 `protobuf:"varint,4,req,def=0" json:"InviteColdDown,omitempty"`
	// * 必中红箱子花费钻石
	RedBoxCost *uint32 `protobuf:"varint,5,req,def=0" json:"RedBoxCost,omitempty"`
	// * 正常退出X秒内无法回到原队伍
	TeamBackTime *uint32 `protobuf:"varint,6,req,def=0" json:"TeamBackTime,omitempty"`
	// * 被踢后x秒内无法回到原队伍
	GoOutTeamTime *uint32 `protobuf:"varint,8,req,def=0" json:"GoOutTeamTime,omitempty"`
	// * 每种难度最多显示多少个房间
	RoomMax *uint32 `protobuf:"varint,7,req,def=0" json:"RoomMax,omitempty"`
	// * 等待另一个玩家响应时间(客户端）
	WaitTime *uint32 `protobuf:"varint,9,req,def=0" json:"WaitTime,omitempty"`
	// * 等待另一个玩家响应时间(服务器）
	WaitTimeServer *uint32 `protobuf:"varint,10,req,def=0" json:"WaitTimeServer,omitempty"`
	// * x秒切后台无响应认定为掉线
	BackstageTime    *uint32 `protobuf:"varint,11,req,def=0" json:"BackstageTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TBOSSCONFIG) Reset()         { *m = TBOSSCONFIG{} }
func (m *TBOSSCONFIG) String() string { return proto.CompactTextString(m) }
func (*TBOSSCONFIG) ProtoMessage()    {}

const Default_TBOSSCONFIG_HCOpenBoxNum uint32 = 0
const Default_TBOSSCONFIG_BoxTimeMin uint32 = 0
const Default_TBOSSCONFIG_TimeMinHC uint32 = 0
const Default_TBOSSCONFIG_InviteColdDown uint32 = 0
const Default_TBOSSCONFIG_RedBoxCost uint32 = 0
const Default_TBOSSCONFIG_TeamBackTime uint32 = 0
const Default_TBOSSCONFIG_GoOutTeamTime uint32 = 0
const Default_TBOSSCONFIG_RoomMax uint32 = 0
const Default_TBOSSCONFIG_WaitTime uint32 = 0
const Default_TBOSSCONFIG_WaitTimeServer uint32 = 0
const Default_TBOSSCONFIG_BackstageTime uint32 = 0

func (m *TBOSSCONFIG) GetHCOpenBoxNum() uint32 {
	if m != nil && m.HCOpenBoxNum != nil {
		return *m.HCOpenBoxNum
	}
	return Default_TBOSSCONFIG_HCOpenBoxNum
}

func (m *TBOSSCONFIG) GetBoxTimeMin() uint32 {
	if m != nil && m.BoxTimeMin != nil {
		return *m.BoxTimeMin
	}
	return Default_TBOSSCONFIG_BoxTimeMin
}

func (m *TBOSSCONFIG) GetTimeMinHC() uint32 {
	if m != nil && m.TimeMinHC != nil {
		return *m.TimeMinHC
	}
	return Default_TBOSSCONFIG_TimeMinHC
}

func (m *TBOSSCONFIG) GetInviteColdDown() uint32 {
	if m != nil && m.InviteColdDown != nil {
		return *m.InviteColdDown
	}
	return Default_TBOSSCONFIG_InviteColdDown
}

func (m *TBOSSCONFIG) GetRedBoxCost() uint32 {
	if m != nil && m.RedBoxCost != nil {
		return *m.RedBoxCost
	}
	return Default_TBOSSCONFIG_RedBoxCost
}

func (m *TBOSSCONFIG) GetTeamBackTime() uint32 {
	if m != nil && m.TeamBackTime != nil {
		return *m.TeamBackTime
	}
	return Default_TBOSSCONFIG_TeamBackTime
}

func (m *TBOSSCONFIG) GetGoOutTeamTime() uint32 {
	if m != nil && m.GoOutTeamTime != nil {
		return *m.GoOutTeamTime
	}
	return Default_TBOSSCONFIG_GoOutTeamTime
}

func (m *TBOSSCONFIG) GetRoomMax() uint32 {
	if m != nil && m.RoomMax != nil {
		return *m.RoomMax
	}
	return Default_TBOSSCONFIG_RoomMax
}

func (m *TBOSSCONFIG) GetWaitTime() uint32 {
	if m != nil && m.WaitTime != nil {
		return *m.WaitTime
	}
	return Default_TBOSSCONFIG_WaitTime
}

func (m *TBOSSCONFIG) GetWaitTimeServer() uint32 {
	if m != nil && m.WaitTimeServer != nil {
		return *m.WaitTimeServer
	}
	return Default_TBOSSCONFIG_WaitTimeServer
}

func (m *TBOSSCONFIG) GetBackstageTime() uint32 {
	if m != nil && m.BackstageTime != nil {
		return *m.BackstageTime
	}
	return Default_TBOSSCONFIG_BackstageTime
}

type TBOSSCONFIG_ARRAY struct {
	Items            []*TBOSSCONFIG `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *TBOSSCONFIG_ARRAY) Reset()         { *m = TBOSSCONFIG_ARRAY{} }
func (m *TBOSSCONFIG_ARRAY) String() string { return proto.CompactTextString(m) }
func (*TBOSSCONFIG_ARRAY) ProtoMessage()    {}

func (m *TBOSSCONFIG_ARRAY) GetItems() []*TBOSSCONFIG {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

// Code generated by protoc-gen-go.
// source: ProtobufGen_tupoint.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type TUPOINT struct {
	// * 杀怪个数
	KillNum *uint32 `protobuf:"varint,1,req,def=0" json:"KillNum,omitempty"`
	// * 刨除积分
	Subtrahend *uint32 `protobuf:"varint,2,opt,def=0" json:"Subtrahend,omitempty"`
	// * 剩余数的除数
	Divisor          *uint32 `protobuf:"varint,3,opt,def=0" json:"Divisor,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TUPOINT) Reset()         { *m = TUPOINT{} }
func (m *TUPOINT) String() string { return proto.CompactTextString(m) }
func (*TUPOINT) ProtoMessage()    {}

const Default_TUPOINT_KillNum uint32 = 0
const Default_TUPOINT_Subtrahend uint32 = 0
const Default_TUPOINT_Divisor uint32 = 0

func (m *TUPOINT) GetKillNum() uint32 {
	if m != nil && m.KillNum != nil {
		return *m.KillNum
	}
	return Default_TUPOINT_KillNum
}

func (m *TUPOINT) GetSubtrahend() uint32 {
	if m != nil && m.Subtrahend != nil {
		return *m.Subtrahend
	}
	return Default_TUPOINT_Subtrahend
}

func (m *TUPOINT) GetDivisor() uint32 {
	if m != nil && m.Divisor != nil {
		return *m.Divisor
	}
	return Default_TUPOINT_Divisor
}

type TUPOINT_ARRAY struct {
	Items            []*TUPOINT `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *TUPOINT_ARRAY) Reset()         { *m = TUPOINT_ARRAY{} }
func (m *TUPOINT_ARRAY) String() string { return proto.CompactTextString(m) }
func (*TUPOINT_ARRAY) ProtoMessage()    {}

func (m *TUPOINT_ARRAY) GetItems() []*TUPOINT {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

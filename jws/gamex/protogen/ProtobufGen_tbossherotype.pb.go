// Code generated by protoc-gen-go.
// source: ProtobufGen_tbossherotype.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type TBOSSHEROTYPE struct {
	// * 星期
	DateID *uint32 `protobuf:"varint,1,req,def=0" json:"DateID,omitempty"`
	// * 当日出战组合的描述
	DescriptionType  *string                   `protobuf:"bytes,2,opt,def=" json:"DescriptionType,omitempty"`
	Type_Table       []*TBOSSHEROTYPE_TypeRule `protobuf:"bytes,3,rep" json:"Type_Table,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *TBOSSHEROTYPE) Reset()         { *m = TBOSSHEROTYPE{} }
func (m *TBOSSHEROTYPE) String() string { return proto.CompactTextString(m) }
func (*TBOSSHEROTYPE) ProtoMessage()    {}

const Default_TBOSSHEROTYPE_DateID uint32 = 0

func (m *TBOSSHEROTYPE) GetDateID() uint32 {
	if m != nil && m.DateID != nil {
		return *m.DateID
	}
	return Default_TBOSSHEROTYPE_DateID
}

func (m *TBOSSHEROTYPE) GetDescriptionType() string {
	if m != nil && m.DescriptionType != nil {
		return *m.DescriptionType
	}
	return ""
}

func (m *TBOSSHEROTYPE) GetType_Table() []*TBOSSHEROTYPE_TypeRule {
	if m != nil {
		return m.Type_Table
	}
	return nil
}

type TBOSSHEROTYPE_TypeRule struct {
	// * 限制阵容组合
	TeamTypeID *uint32 `protobuf:"varint,1,opt,def=0" json:"TeamTypeID,omitempty"`
	// * 随机权重
	ChooseChance     *uint32 `protobuf:"varint,2,opt,def=0" json:"ChooseChance,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TBOSSHEROTYPE_TypeRule) Reset()         { *m = TBOSSHEROTYPE_TypeRule{} }
func (m *TBOSSHEROTYPE_TypeRule) String() string { return proto.CompactTextString(m) }
func (*TBOSSHEROTYPE_TypeRule) ProtoMessage()    {}

const Default_TBOSSHEROTYPE_TypeRule_TeamTypeID uint32 = 0
const Default_TBOSSHEROTYPE_TypeRule_ChooseChance uint32 = 0

func (m *TBOSSHEROTYPE_TypeRule) GetTeamTypeID() uint32 {
	if m != nil && m.TeamTypeID != nil {
		return *m.TeamTypeID
	}
	return Default_TBOSSHEROTYPE_TypeRule_TeamTypeID
}

func (m *TBOSSHEROTYPE_TypeRule) GetChooseChance() uint32 {
	if m != nil && m.ChooseChance != nil {
		return *m.ChooseChance
	}
	return Default_TBOSSHEROTYPE_TypeRule_ChooseChance
}

type TBOSSHEROTYPE_ARRAY struct {
	Items            []*TBOSSHEROTYPE `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *TBOSSHEROTYPE_ARRAY) Reset()         { *m = TBOSSHEROTYPE_ARRAY{} }
func (m *TBOSSHEROTYPE_ARRAY) String() string { return proto.CompactTextString(m) }
func (*TBOSSHEROTYPE_ARRAY) ProtoMessage()    {}

func (m *TBOSSHEROTYPE_ARRAY) GetItems() []*TBOSSHEROTYPE {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

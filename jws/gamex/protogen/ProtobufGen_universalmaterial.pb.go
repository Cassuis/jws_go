// Code generated by protoc-gen-go.
// source: ProtobufGen_universalmaterial.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type UNIVERSALMATERIAL struct {
	// * 材料唯一序列标识
	UniversalMaterialID *uint32 `protobuf:"varint,1,req,def=0" json:"UniversalMaterialID,omitempty"`
	// * 材料等级
	UniversalMaterialLevel *uint32 `protobuf:"varint,2,req,def=0" json:"UniversalMaterialLevel,omitempty"`
	// * 材料ID
	MaterialID       *string `protobuf:"bytes,3,req,def=" json:"MaterialID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UNIVERSALMATERIAL) Reset()         { *m = UNIVERSALMATERIAL{} }
func (m *UNIVERSALMATERIAL) String() string { return proto.CompactTextString(m) }
func (*UNIVERSALMATERIAL) ProtoMessage()    {}

const Default_UNIVERSALMATERIAL_UniversalMaterialID uint32 = 0
const Default_UNIVERSALMATERIAL_UniversalMaterialLevel uint32 = 0

func (m *UNIVERSALMATERIAL) GetUniversalMaterialID() uint32 {
	if m != nil && m.UniversalMaterialID != nil {
		return *m.UniversalMaterialID
	}
	return Default_UNIVERSALMATERIAL_UniversalMaterialID
}

func (m *UNIVERSALMATERIAL) GetUniversalMaterialLevel() uint32 {
	if m != nil && m.UniversalMaterialLevel != nil {
		return *m.UniversalMaterialLevel
	}
	return Default_UNIVERSALMATERIAL_UniversalMaterialLevel
}

func (m *UNIVERSALMATERIAL) GetMaterialID() string {
	if m != nil && m.MaterialID != nil {
		return *m.MaterialID
	}
	return ""
}

type UNIVERSALMATERIAL_ARRAY struct {
	Items            []*UNIVERSALMATERIAL `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *UNIVERSALMATERIAL_ARRAY) Reset()         { *m = UNIVERSALMATERIAL_ARRAY{} }
func (m *UNIVERSALMATERIAL_ARRAY) String() string { return proto.CompactTextString(m) }
func (*UNIVERSALMATERIAL_ARRAY) ProtoMessage()    {}

func (m *UNIVERSALMATERIAL_ARRAY) GetItems() []*UNIVERSALMATERIAL {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

// Code generated by protoc-gen-go.
// source: ProtobufGen_starmap.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type STARMAP struct {
	// * 镶孔ID
	StarHoleID *uint32 `protobuf:"varint,1,req,def=0" json:"StarHoleID,omitempty"`
	// * 主将星级要求
	HeroStarLimit *uint32 `protobuf:"varint,2,opt,def=0" json:"HeroStarLimit,omitempty"`
	// * 主将等级要求
	HeroLevelLimit *uint32 `protobuf:"varint,3,opt,def=0" json:"HeroLevelLimit,omitempty"`
	// * 孔位名称
	HoleName         *string `protobuf:"bytes,4,opt,def=" json:"HoleName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *STARMAP) Reset()         { *m = STARMAP{} }
func (m *STARMAP) String() string { return proto.CompactTextString(m) }
func (*STARMAP) ProtoMessage()    {}

const Default_STARMAP_StarHoleID uint32 = 0
const Default_STARMAP_HeroStarLimit uint32 = 0
const Default_STARMAP_HeroLevelLimit uint32 = 0

func (m *STARMAP) GetStarHoleID() uint32 {
	if m != nil && m.StarHoleID != nil {
		return *m.StarHoleID
	}
	return Default_STARMAP_StarHoleID
}

func (m *STARMAP) GetHeroStarLimit() uint32 {
	if m != nil && m.HeroStarLimit != nil {
		return *m.HeroStarLimit
	}
	return Default_STARMAP_HeroStarLimit
}

func (m *STARMAP) GetHeroLevelLimit() uint32 {
	if m != nil && m.HeroLevelLimit != nil {
		return *m.HeroLevelLimit
	}
	return Default_STARMAP_HeroLevelLimit
}

func (m *STARMAP) GetHoleName() string {
	if m != nil && m.HoleName != nil {
		return *m.HoleName
	}
	return ""
}

type STARMAP_ARRAY struct {
	Items            []*STARMAP `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *STARMAP_ARRAY) Reset()         { *m = STARMAP_ARRAY{} }
func (m *STARMAP_ARRAY) String() string { return proto.CompactTextString(m) }
func (*STARMAP_ARRAY) ProtoMessage()    {}

func (m *STARMAP_ARRAY) GetItems() []*STARMAP {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

// Code generated by protoc-gen-go.
// source: ProtobufGen_relationactive.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type RELATIONACTIVE struct {
	// * 唯一ID
	UniqueID *uint32 `protobuf:"varint,9,opt,def=0" json:"UniqueID,omitempty"`
	// * 主将ID
	HeroID *string `protobuf:"bytes,1,opt,def=" json:"HeroID,omitempty"`
	// * 情缘等级
	RelationLevel *uint32 `protobuf:"varint,2,opt,def=0" json:"RelationLevel,omitempty"`
	// * 情缘武将ID
	CompanionID *string `protobuf:"bytes,3,opt,def=" json:"CompanionID,omitempty"`
	// * 激活序列
	RelationArray *uint32 `protobuf:"varint,10,opt,def=0" json:"RelationArray,omitempty"`
	// * 存档关系
	MemoryRelation *string `protobuf:"bytes,11,opt,def=" json:"MemoryRelation,omitempty"`
	// * 激活条件描述
	ConditionDes *string `protobuf:"bytes,4,opt,def=" json:"ConditionDes,omitempty"`
	// * 激活条件类型
	ActiveType *uint32 `protobuf:"varint,5,opt,def=0" json:"ActiveType,omitempty"`
	// * 激活条件参数
	ActivePara *uint32 `protobuf:"varint,6,opt,def=0" json:"ActivePara,omitempty"`
	// * 激活奖励属性
	ActiveReward *uint32 `protobuf:"varint,7,opt,def=0" json:"ActiveReward,omitempty"`
	// * 属性值
	ActiveRewardValue *float32 `protobuf:"fixed32,8,opt,def=0" json:"ActiveRewardValue,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *RELATIONACTIVE) Reset()         { *m = RELATIONACTIVE{} }
func (m *RELATIONACTIVE) String() string { return proto.CompactTextString(m) }
func (*RELATIONACTIVE) ProtoMessage()    {}

const Default_RELATIONACTIVE_UniqueID uint32 = 0
const Default_RELATIONACTIVE_RelationLevel uint32 = 0
const Default_RELATIONACTIVE_RelationArray uint32 = 0
const Default_RELATIONACTIVE_ActiveType uint32 = 0
const Default_RELATIONACTIVE_ActivePara uint32 = 0
const Default_RELATIONACTIVE_ActiveReward uint32 = 0
const Default_RELATIONACTIVE_ActiveRewardValue float32 = 0

func (m *RELATIONACTIVE) GetUniqueID() uint32 {
	if m != nil && m.UniqueID != nil {
		return *m.UniqueID
	}
	return Default_RELATIONACTIVE_UniqueID
}

func (m *RELATIONACTIVE) GetHeroID() string {
	if m != nil && m.HeroID != nil {
		return *m.HeroID
	}
	return ""
}

func (m *RELATIONACTIVE) GetRelationLevel() uint32 {
	if m != nil && m.RelationLevel != nil {
		return *m.RelationLevel
	}
	return Default_RELATIONACTIVE_RelationLevel
}

func (m *RELATIONACTIVE) GetCompanionID() string {
	if m != nil && m.CompanionID != nil {
		return *m.CompanionID
	}
	return ""
}

func (m *RELATIONACTIVE) GetRelationArray() uint32 {
	if m != nil && m.RelationArray != nil {
		return *m.RelationArray
	}
	return Default_RELATIONACTIVE_RelationArray
}

func (m *RELATIONACTIVE) GetMemoryRelation() string {
	if m != nil && m.MemoryRelation != nil {
		return *m.MemoryRelation
	}
	return ""
}

func (m *RELATIONACTIVE) GetConditionDes() string {
	if m != nil && m.ConditionDes != nil {
		return *m.ConditionDes
	}
	return ""
}

func (m *RELATIONACTIVE) GetActiveType() uint32 {
	if m != nil && m.ActiveType != nil {
		return *m.ActiveType
	}
	return Default_RELATIONACTIVE_ActiveType
}

func (m *RELATIONACTIVE) GetActivePara() uint32 {
	if m != nil && m.ActivePara != nil {
		return *m.ActivePara
	}
	return Default_RELATIONACTIVE_ActivePara
}

func (m *RELATIONACTIVE) GetActiveReward() uint32 {
	if m != nil && m.ActiveReward != nil {
		return *m.ActiveReward
	}
	return Default_RELATIONACTIVE_ActiveReward
}

func (m *RELATIONACTIVE) GetActiveRewardValue() float32 {
	if m != nil && m.ActiveRewardValue != nil {
		return *m.ActiveRewardValue
	}
	return Default_RELATIONACTIVE_ActiveRewardValue
}

type RELATIONACTIVE_ARRAY struct {
	Items            []*RELATIONACTIVE `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *RELATIONACTIVE_ARRAY) Reset()         { *m = RELATIONACTIVE_ARRAY{} }
func (m *RELATIONACTIVE_ARRAY) String() string { return proto.CompactTextString(m) }
func (*RELATIONACTIVE_ARRAY) ProtoMessage()    {}

func (m *RELATIONACTIVE_ARRAY) GetItems() []*RELATIONACTIVE {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

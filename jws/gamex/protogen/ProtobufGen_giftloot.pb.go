// Code generated by protoc-gen-go.
// source: ProtobufGen_giftloot.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type GIFTLOOT struct {
	// * 奖励ID
	GiftID *uint32 `protobuf:"varint,1,req,def=0" json:"GiftID,omitempty"`
	// * 奖励对应物品ID
	GiftItem *string `protobuf:"bytes,2,opt,def=" json:"GiftItem,omitempty"`
	// * 随机奖励ID
	RandomLootID *string `protobuf:"bytes,3,opt,def=" json:"RandomLootID,omitempty"`
	// * 随机奖励数量
	RandomLootAmount *uint32 `protobuf:"varint,4,opt,def=0" json:"RandomLootAmount,omitempty"`
	// * 随机奖励掉落权重
	RandomLootWeight *float32 `protobuf:"fixed32,5,opt,def=0" json:"RandomLootWeight,omitempty"`
	// * 随机奖励每日掉落上限
	MaxDailyLoot     *uint32 `protobuf:"varint,6,opt,def=0" json:"MaxDailyLoot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GIFTLOOT) Reset()         { *m = GIFTLOOT{} }
func (m *GIFTLOOT) String() string { return proto.CompactTextString(m) }
func (*GIFTLOOT) ProtoMessage()    {}

const Default_GIFTLOOT_GiftID uint32 = 0
const Default_GIFTLOOT_RandomLootAmount uint32 = 0
const Default_GIFTLOOT_RandomLootWeight float32 = 0
const Default_GIFTLOOT_MaxDailyLoot uint32 = 0

func (m *GIFTLOOT) GetGiftID() uint32 {
	if m != nil && m.GiftID != nil {
		return *m.GiftID
	}
	return Default_GIFTLOOT_GiftID
}

func (m *GIFTLOOT) GetGiftItem() string {
	if m != nil && m.GiftItem != nil {
		return *m.GiftItem
	}
	return ""
}

func (m *GIFTLOOT) GetRandomLootID() string {
	if m != nil && m.RandomLootID != nil {
		return *m.RandomLootID
	}
	return ""
}

func (m *GIFTLOOT) GetRandomLootAmount() uint32 {
	if m != nil && m.RandomLootAmount != nil {
		return *m.RandomLootAmount
	}
	return Default_GIFTLOOT_RandomLootAmount
}

func (m *GIFTLOOT) GetRandomLootWeight() float32 {
	if m != nil && m.RandomLootWeight != nil {
		return *m.RandomLootWeight
	}
	return Default_GIFTLOOT_RandomLootWeight
}

func (m *GIFTLOOT) GetMaxDailyLoot() uint32 {
	if m != nil && m.MaxDailyLoot != nil {
		return *m.MaxDailyLoot
	}
	return Default_GIFTLOOT_MaxDailyLoot
}

type GIFTLOOT_ARRAY struct {
	Items            []*GIFTLOOT `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *GIFTLOOT_ARRAY) Reset()         { *m = GIFTLOOT_ARRAY{} }
func (m *GIFTLOOT_ARRAY) String() string { return proto.CompactTextString(m) }
func (*GIFTLOOT_ARRAY) ProtoMessage()    {}

func (m *GIFTLOOT_ARRAY) GetItems() []*GIFTLOOT {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

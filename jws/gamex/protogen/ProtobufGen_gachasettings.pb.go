// Code generated by protoc-gen-go.
// source: ProtobufGen_gachasettings.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type GACHASETTINGS struct {
	// * 抽奖类型，用于区别是哪一个抽奖
	GachaType *uint32 `protobuf:"varint,1,opt,def=0" json:"GachaType,omitempty"`
	// * 抽奖宝箱的分类
	GachaCategory *uint32 `protobuf:"varint,21,opt,def=0" json:"GachaCategory,omitempty"`
	// * 购买的物品
	GachaItem *string `protobuf:"bytes,2,opt,def=" json:"GachaItem,omitempty"`
	// * 当前gacha对应的描述，如“购买经验药膏”
	GachaDes *string `protobuf:"bytes,3,opt,def=" json:"GachaDes,omitempty"`
	// * 货币道具ID
	GachaCoin *string `protobuf:"bytes,4,opt,def=" json:"GachaCoin,omitempty"`
	// * 单次的价格
	APrice *uint32 `protobuf:"varint,5,opt,def=0" json:"APrice,omitempty"`
	// * 10次的价格
	TenPrice *uint32 `protobuf:"varint,6,opt,def=0" json:"TenPrice,omitempty"`
	// * 抽奖券ID
	GachaTicket *string `protobuf:"bytes,18,opt,def=" json:"GachaTicket,omitempty"`
	// * 单次抽奖券数量
	TAPrice *uint32 `protobuf:"varint,19,opt,def=1" json:"TAPrice,omitempty"`
	// * 10次抽奖券的数量
	TTenPrice *uint32 `protobuf:"varint,20,opt,def=10" json:"TTenPrice,omitempty"`
	// * 免费抽奖的间隔时间（单位：分钟），更新点不清零
	FreeTime *uint32 `protobuf:"varint,7,opt,def=0" json:"FreeTime,omitempty"`
	// * 每日抽奖次数上限
	DailyLimit *uint32 `protobuf:"varint,8,opt,def=0" json:"DailyLimit,omitempty"`
	// * 首次抽奖道具
	FirstGachaItem *string `protobuf:"bytes,9,opt,def=" json:"FirstGachaItem,omitempty"`
	// * 首次抽奖道具数量
	FirstGachaCount *uint32 `protobuf:"varint,10,opt,def=0" json:"FirstGachaCount,omitempty"`
	// * 额外奖励物品组
	ExtraGroup *uint32 `protobuf:"varint,11,opt,def=0" json:"ExtraGroup,omitempty"`
	// * 每几次给一次额外奖励
	ExtraSpace *uint32 `protobuf:"varint,12,opt,def=0" json:"ExtraSpace,omitempty"`
	// * 初始次数
	ExtraStartNum *uint32 `protobuf:"varint,13,opt,def=0" json:"ExtraStartNum,omitempty"`
	// * 前x-1次没抽到M时，第x次必给
	AfricaNumber *uint32 `protobuf:"varint,14,opt,def=0" json:"AfricaNumber,omitempty"`
	// * M的ID
	ItemID *string `protobuf:"bytes,15,opt,def=" json:"ItemID,omitempty"`
	// * M的个数
	ItemNum *uint32 `protobuf:"varint,16,opt,def=0" json:"ItemNum,omitempty"`
	// * 宝箱的主将图片
	GachaPicture     *string `protobuf:"bytes,17,opt,def=" json:"GachaPicture,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GACHASETTINGS) Reset()         { *m = GACHASETTINGS{} }
func (m *GACHASETTINGS) String() string { return proto.CompactTextString(m) }
func (*GACHASETTINGS) ProtoMessage()    {}

const Default_GACHASETTINGS_GachaType uint32 = 0
const Default_GACHASETTINGS_GachaCategory uint32 = 0
const Default_GACHASETTINGS_APrice uint32 = 0
const Default_GACHASETTINGS_TenPrice uint32 = 0
const Default_GACHASETTINGS_TAPrice uint32 = 1
const Default_GACHASETTINGS_TTenPrice uint32 = 10
const Default_GACHASETTINGS_FreeTime uint32 = 0
const Default_GACHASETTINGS_DailyLimit uint32 = 0
const Default_GACHASETTINGS_FirstGachaCount uint32 = 0
const Default_GACHASETTINGS_ExtraGroup uint32 = 0
const Default_GACHASETTINGS_ExtraSpace uint32 = 0
const Default_GACHASETTINGS_ExtraStartNum uint32 = 0
const Default_GACHASETTINGS_AfricaNumber uint32 = 0
const Default_GACHASETTINGS_ItemNum uint32 = 0

func (m *GACHASETTINGS) GetGachaType() uint32 {
	if m != nil && m.GachaType != nil {
		return *m.GachaType
	}
	return Default_GACHASETTINGS_GachaType
}

func (m *GACHASETTINGS) GetGachaCategory() uint32 {
	if m != nil && m.GachaCategory != nil {
		return *m.GachaCategory
	}
	return Default_GACHASETTINGS_GachaCategory
}

func (m *GACHASETTINGS) GetGachaItem() string {
	if m != nil && m.GachaItem != nil {
		return *m.GachaItem
	}
	return ""
}

func (m *GACHASETTINGS) GetGachaDes() string {
	if m != nil && m.GachaDes != nil {
		return *m.GachaDes
	}
	return ""
}

func (m *GACHASETTINGS) GetGachaCoin() string {
	if m != nil && m.GachaCoin != nil {
		return *m.GachaCoin
	}
	return ""
}

func (m *GACHASETTINGS) GetAPrice() uint32 {
	if m != nil && m.APrice != nil {
		return *m.APrice
	}
	return Default_GACHASETTINGS_APrice
}

func (m *GACHASETTINGS) GetTenPrice() uint32 {
	if m != nil && m.TenPrice != nil {
		return *m.TenPrice
	}
	return Default_GACHASETTINGS_TenPrice
}

func (m *GACHASETTINGS) GetGachaTicket() string {
	if m != nil && m.GachaTicket != nil {
		return *m.GachaTicket
	}
	return ""
}

func (m *GACHASETTINGS) GetTAPrice() uint32 {
	if m != nil && m.TAPrice != nil {
		return *m.TAPrice
	}
	return Default_GACHASETTINGS_TAPrice
}

func (m *GACHASETTINGS) GetTTenPrice() uint32 {
	if m != nil && m.TTenPrice != nil {
		return *m.TTenPrice
	}
	return Default_GACHASETTINGS_TTenPrice
}

func (m *GACHASETTINGS) GetFreeTime() uint32 {
	if m != nil && m.FreeTime != nil {
		return *m.FreeTime
	}
	return Default_GACHASETTINGS_FreeTime
}

func (m *GACHASETTINGS) GetDailyLimit() uint32 {
	if m != nil && m.DailyLimit != nil {
		return *m.DailyLimit
	}
	return Default_GACHASETTINGS_DailyLimit
}

func (m *GACHASETTINGS) GetFirstGachaItem() string {
	if m != nil && m.FirstGachaItem != nil {
		return *m.FirstGachaItem
	}
	return ""
}

func (m *GACHASETTINGS) GetFirstGachaCount() uint32 {
	if m != nil && m.FirstGachaCount != nil {
		return *m.FirstGachaCount
	}
	return Default_GACHASETTINGS_FirstGachaCount
}

func (m *GACHASETTINGS) GetExtraGroup() uint32 {
	if m != nil && m.ExtraGroup != nil {
		return *m.ExtraGroup
	}
	return Default_GACHASETTINGS_ExtraGroup
}

func (m *GACHASETTINGS) GetExtraSpace() uint32 {
	if m != nil && m.ExtraSpace != nil {
		return *m.ExtraSpace
	}
	return Default_GACHASETTINGS_ExtraSpace
}

func (m *GACHASETTINGS) GetExtraStartNum() uint32 {
	if m != nil && m.ExtraStartNum != nil {
		return *m.ExtraStartNum
	}
	return Default_GACHASETTINGS_ExtraStartNum
}

func (m *GACHASETTINGS) GetAfricaNumber() uint32 {
	if m != nil && m.AfricaNumber != nil {
		return *m.AfricaNumber
	}
	return Default_GACHASETTINGS_AfricaNumber
}

func (m *GACHASETTINGS) GetItemID() string {
	if m != nil && m.ItemID != nil {
		return *m.ItemID
	}
	return ""
}

func (m *GACHASETTINGS) GetItemNum() uint32 {
	if m != nil && m.ItemNum != nil {
		return *m.ItemNum
	}
	return Default_GACHASETTINGS_ItemNum
}

func (m *GACHASETTINGS) GetGachaPicture() string {
	if m != nil && m.GachaPicture != nil {
		return *m.GachaPicture
	}
	return ""
}

type GACHASETTINGS_ARRAY struct {
	Items            []*GACHASETTINGS `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GACHASETTINGS_ARRAY) Reset()         { *m = GACHASETTINGS_ARRAY{} }
func (m *GACHASETTINGS_ARRAY) String() string { return proto.CompactTextString(m) }
func (*GACHASETTINGS_ARRAY) ProtoMessage()    {}

func (m *GACHASETTINGS_ARRAY) GetItems() []*GACHASETTINGS {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

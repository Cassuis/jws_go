// Code generated by protoc-gen-go.
// source: ProtobufGen_heroconfig.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type HEROCONFIG struct {
	// * 主将等级基数
	HeroLevelBase *int32 `protobuf:"varint,1,req,def=0" json:"HeroLevelBase,omitempty"`
	// * 成长修生系数
	HeorGrowthRate *float32 `protobuf:"fixed32,2,req,def=0" json:"HeorGrowthRate,omitempty"`
	// * 天赋点上限
	HSPointLimit *uint32 `protobuf:"varint,3,req,def=0" json:"HSPointLimit,omitempty"`
	// * 天赋点回复时间(秒)
	HSPointTime *uint32 `protobuf:"varint,4,req,def=0" json:"HSPointTime,omitempty"`
	// * 单次购买的天赋点数量
	HSPointUnit *uint32 `protobuf:"varint,5,req,def=0" json:"HSPointUnit,omitempty"`
	// * 1点天赋点增加的GS值
	HSPointGS *uint32 `protobuf:"varint,6,req,def=0" json:"HSPointGS,omitempty"`
	// * 神翼解锁的主将等级
	HWUnlockLevel *uint32 `protobuf:"varint,7,req,def=0" json:"HWUnlockLevel,omitempty"`
	// * 神翼解锁的主将星级
	HWUnlockStar *uint32 `protobuf:"varint,8,req,def=0" json:"HWUnlockStar,omitempty"`
	// * 神翼升级解锁所需的神翼星级
	HWLevelUnlockStar *uint32 `protobuf:"varint,9,req,def=0" json:"HWLevelUnlockStar,omitempty"`
	// * 聚义解锁的武将等级
	CompanionUnlockLv *uint32 `protobuf:"varint,10,req,def=0" json:"CompanionUnlockLv,omitempty"`
	// * 聚义解锁的武将星级
	CompanionUnlockStar *uint32 `protobuf:"varint,11,req,def=0" json:"CompanionUnlockStar,omitempty"`
	// * 是否显示神兵入口
	IsGloryWeaponVisible *uint32 `protobuf:"varint,25,req,def=0" json:"IsGloryWeaponVisible,omitempty"`
	// * 神兵解锁主将等级
	GloryWeaponUnlockLv *uint32 `protobuf:"varint,12,req,def=0" json:"GloryWeaponUnlockLv,omitempty"`
	// * 神兵解锁主将星级
	GloryWeaponUnlockStar *uint32 `protobuf:"varint,13,req,def=0" json:"GloryWeaponUnlockStar,omitempty"`
	// * 神兵培养材料1
	GloryWeaponDevelopCoin1 *string `protobuf:"bytes,14,req,def=" json:"GloryWeaponDevelopCoin1,omitempty"`
	// * 神兵培养单次所需材料数量1
	GWDevelopCoinUnit1 *uint32 `protobuf:"varint,15,req,def=0" json:"GWDevelopCoinUnit1,omitempty"`
	// * 神兵培养材料2
	GloryWeaponDevelopCoin2 *string `protobuf:"bytes,16,req,def=" json:"GloryWeaponDevelopCoin2,omitempty"`
	// * 神兵培养单次所需材料数量2
	GWDevelopCoinUnit2 *uint32 `protobuf:"varint,17,req,def=0" json:"GWDevelopCoinUnit2,omitempty"`
	// * 神兵外观解锁的品质
	GWAppearanceUnlockQuality *uint32 `protobuf:"varint,18,req,def=0" json:"GWAppearanceUnlockQuality,omitempty"`
	// * 重生所需的钻石/次
	GWRebornCost *uint32 `protobuf:"varint,19,req,def=0" json:"GWRebornCost,omitempty"`
	// * 重生返还的材料百分比
	GWRebornRate *float32 `protobuf:"fixed32,20,req,def=0" json:"GWRebornRate,omitempty"`
	// * 是否显示羁绊入口
	IsFateVisible *uint32 `protobuf:"varint,26,req,def=0" json:"IsFateVisible,omitempty"`
	// * 羁绊开启等级
	FateOpenLevel *uint32 `protobuf:"varint,21,req,def=0" json:"FateOpenLevel,omitempty"`
	// * 开启碎片回收商店所需消耗的体力
	SPStoreAppear *uint32 `protobuf:"varint,22,req,def=0" json:"SPStoreAppear,omitempty"`
	// * 碎片回收商店持续的时间（分）
	SPStoreDuration *uint32 `protobuf:"varint,23,req,def=0" json:"SPStoreDuration,omitempty"`
	// * 碎片回收商店每日开启的次数限制
	SPStoreTimes     *uint32 `protobuf:"varint,24,req,def=0" json:"SPStoreTimes,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HEROCONFIG) Reset()         { *m = HEROCONFIG{} }
func (m *HEROCONFIG) String() string { return proto.CompactTextString(m) }
func (*HEROCONFIG) ProtoMessage()    {}

const Default_HEROCONFIG_HeroLevelBase int32 = 0
const Default_HEROCONFIG_HeorGrowthRate float32 = 0
const Default_HEROCONFIG_HSPointLimit uint32 = 0
const Default_HEROCONFIG_HSPointTime uint32 = 0
const Default_HEROCONFIG_HSPointUnit uint32 = 0
const Default_HEROCONFIG_HSPointGS uint32 = 0
const Default_HEROCONFIG_HWUnlockLevel uint32 = 0
const Default_HEROCONFIG_HWUnlockStar uint32 = 0
const Default_HEROCONFIG_HWLevelUnlockStar uint32 = 0
const Default_HEROCONFIG_CompanionUnlockLv uint32 = 0
const Default_HEROCONFIG_CompanionUnlockStar uint32 = 0
const Default_HEROCONFIG_IsGloryWeaponVisible uint32 = 0
const Default_HEROCONFIG_GloryWeaponUnlockLv uint32 = 0
const Default_HEROCONFIG_GloryWeaponUnlockStar uint32 = 0
const Default_HEROCONFIG_GWDevelopCoinUnit1 uint32 = 0
const Default_HEROCONFIG_GWDevelopCoinUnit2 uint32 = 0
const Default_HEROCONFIG_GWAppearanceUnlockQuality uint32 = 0
const Default_HEROCONFIG_GWRebornCost uint32 = 0
const Default_HEROCONFIG_GWRebornRate float32 = 0
const Default_HEROCONFIG_IsFateVisible uint32 = 0
const Default_HEROCONFIG_FateOpenLevel uint32 = 0
const Default_HEROCONFIG_SPStoreAppear uint32 = 0
const Default_HEROCONFIG_SPStoreDuration uint32 = 0
const Default_HEROCONFIG_SPStoreTimes uint32 = 0

func (m *HEROCONFIG) GetHeroLevelBase() int32 {
	if m != nil && m.HeroLevelBase != nil {
		return *m.HeroLevelBase
	}
	return Default_HEROCONFIG_HeroLevelBase
}

func (m *HEROCONFIG) GetHeorGrowthRate() float32 {
	if m != nil && m.HeorGrowthRate != nil {
		return *m.HeorGrowthRate
	}
	return Default_HEROCONFIG_HeorGrowthRate
}

func (m *HEROCONFIG) GetHSPointLimit() uint32 {
	if m != nil && m.HSPointLimit != nil {
		return *m.HSPointLimit
	}
	return Default_HEROCONFIG_HSPointLimit
}

func (m *HEROCONFIG) GetHSPointTime() uint32 {
	if m != nil && m.HSPointTime != nil {
		return *m.HSPointTime
	}
	return Default_HEROCONFIG_HSPointTime
}

func (m *HEROCONFIG) GetHSPointUnit() uint32 {
	if m != nil && m.HSPointUnit != nil {
		return *m.HSPointUnit
	}
	return Default_HEROCONFIG_HSPointUnit
}

func (m *HEROCONFIG) GetHSPointGS() uint32 {
	if m != nil && m.HSPointGS != nil {
		return *m.HSPointGS
	}
	return Default_HEROCONFIG_HSPointGS
}

func (m *HEROCONFIG) GetHWUnlockLevel() uint32 {
	if m != nil && m.HWUnlockLevel != nil {
		return *m.HWUnlockLevel
	}
	return Default_HEROCONFIG_HWUnlockLevel
}

func (m *HEROCONFIG) GetHWUnlockStar() uint32 {
	if m != nil && m.HWUnlockStar != nil {
		return *m.HWUnlockStar
	}
	return Default_HEROCONFIG_HWUnlockStar
}

func (m *HEROCONFIG) GetHWLevelUnlockStar() uint32 {
	if m != nil && m.HWLevelUnlockStar != nil {
		return *m.HWLevelUnlockStar
	}
	return Default_HEROCONFIG_HWLevelUnlockStar
}

func (m *HEROCONFIG) GetCompanionUnlockLv() uint32 {
	if m != nil && m.CompanionUnlockLv != nil {
		return *m.CompanionUnlockLv
	}
	return Default_HEROCONFIG_CompanionUnlockLv
}

func (m *HEROCONFIG) GetCompanionUnlockStar() uint32 {
	if m != nil && m.CompanionUnlockStar != nil {
		return *m.CompanionUnlockStar
	}
	return Default_HEROCONFIG_CompanionUnlockStar
}

func (m *HEROCONFIG) GetIsGloryWeaponVisible() uint32 {
	if m != nil && m.IsGloryWeaponVisible != nil {
		return *m.IsGloryWeaponVisible
	}
	return Default_HEROCONFIG_IsGloryWeaponVisible
}

func (m *HEROCONFIG) GetGloryWeaponUnlockLv() uint32 {
	if m != nil && m.GloryWeaponUnlockLv != nil {
		return *m.GloryWeaponUnlockLv
	}
	return Default_HEROCONFIG_GloryWeaponUnlockLv
}

func (m *HEROCONFIG) GetGloryWeaponUnlockStar() uint32 {
	if m != nil && m.GloryWeaponUnlockStar != nil {
		return *m.GloryWeaponUnlockStar
	}
	return Default_HEROCONFIG_GloryWeaponUnlockStar
}

func (m *HEROCONFIG) GetGloryWeaponDevelopCoin1() string {
	if m != nil && m.GloryWeaponDevelopCoin1 != nil {
		return *m.GloryWeaponDevelopCoin1
	}
	return ""
}

func (m *HEROCONFIG) GetGWDevelopCoinUnit1() uint32 {
	if m != nil && m.GWDevelopCoinUnit1 != nil {
		return *m.GWDevelopCoinUnit1
	}
	return Default_HEROCONFIG_GWDevelopCoinUnit1
}

func (m *HEROCONFIG) GetGloryWeaponDevelopCoin2() string {
	if m != nil && m.GloryWeaponDevelopCoin2 != nil {
		return *m.GloryWeaponDevelopCoin2
	}
	return ""
}

func (m *HEROCONFIG) GetGWDevelopCoinUnit2() uint32 {
	if m != nil && m.GWDevelopCoinUnit2 != nil {
		return *m.GWDevelopCoinUnit2
	}
	return Default_HEROCONFIG_GWDevelopCoinUnit2
}

func (m *HEROCONFIG) GetGWAppearanceUnlockQuality() uint32 {
	if m != nil && m.GWAppearanceUnlockQuality != nil {
		return *m.GWAppearanceUnlockQuality
	}
	return Default_HEROCONFIG_GWAppearanceUnlockQuality
}

func (m *HEROCONFIG) GetGWRebornCost() uint32 {
	if m != nil && m.GWRebornCost != nil {
		return *m.GWRebornCost
	}
	return Default_HEROCONFIG_GWRebornCost
}

func (m *HEROCONFIG) GetGWRebornRate() float32 {
	if m != nil && m.GWRebornRate != nil {
		return *m.GWRebornRate
	}
	return Default_HEROCONFIG_GWRebornRate
}

func (m *HEROCONFIG) GetIsFateVisible() uint32 {
	if m != nil && m.IsFateVisible != nil {
		return *m.IsFateVisible
	}
	return Default_HEROCONFIG_IsFateVisible
}

func (m *HEROCONFIG) GetFateOpenLevel() uint32 {
	if m != nil && m.FateOpenLevel != nil {
		return *m.FateOpenLevel
	}
	return Default_HEROCONFIG_FateOpenLevel
}

func (m *HEROCONFIG) GetSPStoreAppear() uint32 {
	if m != nil && m.SPStoreAppear != nil {
		return *m.SPStoreAppear
	}
	return Default_HEROCONFIG_SPStoreAppear
}

func (m *HEROCONFIG) GetSPStoreDuration() uint32 {
	if m != nil && m.SPStoreDuration != nil {
		return *m.SPStoreDuration
	}
	return Default_HEROCONFIG_SPStoreDuration
}

func (m *HEROCONFIG) GetSPStoreTimes() uint32 {
	if m != nil && m.SPStoreTimes != nil {
		return *m.SPStoreTimes
	}
	return Default_HEROCONFIG_SPStoreTimes
}

type HEROCONFIG_ARRAY struct {
	Items            []*HEROCONFIG `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *HEROCONFIG_ARRAY) Reset()         { *m = HEROCONFIG_ARRAY{} }
func (m *HEROCONFIG_ARRAY) String() string { return proto.CompactTextString(m) }
func (*HEROCONFIG_ARRAY) ProtoMessage()    {}

func (m *HEROCONFIG_ARRAY) GetItems() []*HEROCONFIG {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

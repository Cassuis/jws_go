// Code generated by protoc-gen-go.
// source: ProtobufGen_growfund.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type GROWFUND struct {
	// * 战队等级
	GroupLevel *uint32 `protobuf:"varint,1,req,def=0" json:"GroupLevel,omitempty"`
	// * 奖励物品ID
	ItemID *string `protobuf:"bytes,2,opt,def=VI_HC" json:"ItemID,omitempty"`
	// * 奖励数量
	Count            *uint32 `protobuf:"varint,3,opt,def=0" json:"Count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GROWFUND) Reset()         { *m = GROWFUND{} }
func (m *GROWFUND) String() string { return proto.CompactTextString(m) }
func (*GROWFUND) ProtoMessage()    {}

const Default_GROWFUND_GroupLevel uint32 = 0
const Default_GROWFUND_ItemID string = "VI_HC"
const Default_GROWFUND_Count uint32 = 0

func (m *GROWFUND) GetGroupLevel() uint32 {
	if m != nil && m.GroupLevel != nil {
		return *m.GroupLevel
	}
	return Default_GROWFUND_GroupLevel
}

func (m *GROWFUND) GetItemID() string {
	if m != nil && m.ItemID != nil {
		return *m.ItemID
	}
	return Default_GROWFUND_ItemID
}

func (m *GROWFUND) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return Default_GROWFUND_Count
}

type GROWFUND_ARRAY struct {
	Items            []*GROWFUND `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *GROWFUND_ARRAY) Reset()         { *m = GROWFUND_ARRAY{} }
func (m *GROWFUND_ARRAY) String() string { return proto.CompactTextString(m) }
func (*GROWFUND_ARRAY) ProtoMessage()    {}

func (m *GROWFUND_ARRAY) GetItems() []*GROWFUND {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

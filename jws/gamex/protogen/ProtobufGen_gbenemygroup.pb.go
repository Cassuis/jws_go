// Code generated by protoc-gen-go.
// source: ProtobufGen_gbenemygroup.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type GBENEMYGROUP struct {
	// * Boss组ID
	BossGroupID *string `protobuf:"bytes,5,req,def=" json:"BossGroupID,omitempty"`
	// * 可抽取的Boss的ID
	BossID *string `protobuf:"bytes,2,req,def=" json:"BossID,omitempty"`
	// * 权值
	Weight *uint32 `protobuf:"varint,3,opt,def=0" json:"Weight,omitempty"`
	// * boss类型（小boss=0，大boss=1）
	BossType         *uint32 `protobuf:"varint,4,opt,def=0" json:"BossType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GBENEMYGROUP) Reset()         { *m = GBENEMYGROUP{} }
func (m *GBENEMYGROUP) String() string { return proto.CompactTextString(m) }
func (*GBENEMYGROUP) ProtoMessage()    {}

const Default_GBENEMYGROUP_Weight uint32 = 0
const Default_GBENEMYGROUP_BossType uint32 = 0

func (m *GBENEMYGROUP) GetBossGroupID() string {
	if m != nil && m.BossGroupID != nil {
		return *m.BossGroupID
	}
	return ""
}

func (m *GBENEMYGROUP) GetBossID() string {
	if m != nil && m.BossID != nil {
		return *m.BossID
	}
	return ""
}

func (m *GBENEMYGROUP) GetWeight() uint32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return Default_GBENEMYGROUP_Weight
}

func (m *GBENEMYGROUP) GetBossType() uint32 {
	if m != nil && m.BossType != nil {
		return *m.BossType
	}
	return Default_GBENEMYGROUP_BossType
}

type GBENEMYGROUP_ARRAY struct {
	Items            []*GBENEMYGROUP `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *GBENEMYGROUP_ARRAY) Reset()         { *m = GBENEMYGROUP_ARRAY{} }
func (m *GBENEMYGROUP_ARRAY) String() string { return proto.CompactTextString(m) }
func (*GBENEMYGROUP_ARRAY) ProtoMessage()    {}

func (m *GBENEMYGROUP_ARRAY) GetItems() []*GBENEMYGROUP {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

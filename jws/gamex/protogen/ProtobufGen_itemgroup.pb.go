// Code generated by protoc-gen-go.
// source: ProtobufGen_itemgroup.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ITEMGROUP struct {
	// * 物品组ID
	ID *string `protobuf:"bytes,1,req,def=" json:"ID,omitempty"`
	// * 角色限制
	RoleLimit        *uint32               `protobuf:"varint,2,opt,def=0" json:"RoleLimit,omitempty"`
	Rules            []*ITEMGROUP_ItemRule `protobuf:"bytes,3,rep" json:"Rules,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *ITEMGROUP) Reset()         { *m = ITEMGROUP{} }
func (m *ITEMGROUP) String() string { return proto.CompactTextString(m) }
func (*ITEMGROUP) ProtoMessage()    {}

const Default_ITEMGROUP_RoleLimit uint32 = 0

func (m *ITEMGROUP) GetID() string {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return ""
}

func (m *ITEMGROUP) GetRoleLimit() uint32 {
	if m != nil && m.RoleLimit != nil {
		return *m.RoleLimit
	}
	return Default_ITEMGROUP_RoleLimit
}

func (m *ITEMGROUP) GetRules() []*ITEMGROUP_ItemRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type ITEMGROUP_ItemRule struct {
	// * 物品ID
	ItemID *string `protobuf:"bytes,1,opt,def=" json:"ItemID,omitempty"`
	// * 权重
	Weight *int32 `protobuf:"varint,2,opt,def=0" json:"Weight,omitempty"`
	// * 最小数量
	CountMin *int32 `protobuf:"varint,3,opt,def=0" json:"CountMin,omitempty"`
	// * 最大数量
	CountMax         *int32 `protobuf:"varint,4,opt,def=0" json:"CountMax,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ITEMGROUP_ItemRule) Reset()         { *m = ITEMGROUP_ItemRule{} }
func (m *ITEMGROUP_ItemRule) String() string { return proto.CompactTextString(m) }
func (*ITEMGROUP_ItemRule) ProtoMessage()    {}

const Default_ITEMGROUP_ItemRule_Weight int32 = 0
const Default_ITEMGROUP_ItemRule_CountMin int32 = 0
const Default_ITEMGROUP_ItemRule_CountMax int32 = 0

func (m *ITEMGROUP_ItemRule) GetItemID() string {
	if m != nil && m.ItemID != nil {
		return *m.ItemID
	}
	return ""
}

func (m *ITEMGROUP_ItemRule) GetWeight() int32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return Default_ITEMGROUP_ItemRule_Weight
}

func (m *ITEMGROUP_ItemRule) GetCountMin() int32 {
	if m != nil && m.CountMin != nil {
		return *m.CountMin
	}
	return Default_ITEMGROUP_ItemRule_CountMin
}

func (m *ITEMGROUP_ItemRule) GetCountMax() int32 {
	if m != nil && m.CountMax != nil {
		return *m.CountMax
	}
	return Default_ITEMGROUP_ItemRule_CountMax
}

type ITEMGROUP_ARRAY struct {
	Items            []*ITEMGROUP `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ITEMGROUP_ARRAY) Reset()         { *m = ITEMGROUP_ARRAY{} }
func (m *ITEMGROUP_ARRAY) String() string { return proto.CompactTextString(m) }
func (*ITEMGROUP_ARRAY) ProtoMessage()    {}

func (m *ITEMGROUP_ARRAY) GetItems() []*ITEMGROUP {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

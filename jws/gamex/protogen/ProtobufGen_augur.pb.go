// Code generated by protoc-gen-go.
// source: ProtobufGen_augur.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type AUGUR struct {
	// * 占星等级
	AugurLevel *uint32 `protobuf:"varint,1,req,def=0" json:"AugurLevel,omitempty"`
	// * 货币
	AugurCoin *string `protobuf:"bytes,10,opt,def=VI_AC" json:"AugurCoin,omitempty"`
	// * 货币数量
	AugurCoinCount *uint32 `protobuf:"varint,11,opt,def=1" json:"AugurCoinCount,omitempty"`
	// * 升本级概率N
	LevelUpN *uint32 `protobuf:"varint,2,opt,def=0" json:"LevelUpN,omitempty"`
	// * 升本级概率M
	LevelUpM *uint32 `protobuf:"varint,3,opt,def=0" json:"LevelUpM,omitempty"`
	// * M的偏移量
	LevelUpSpace *uint32 `protobuf:"varint,4,opt,def=0" json:"LevelUpSpace,omitempty"`
	// * 普通掉落
	NormalLoot *string `protobuf:"bytes,5,opt,def=" json:"NormalLoot,omitempty"`
	// * 特殊掉落
	SpecialLoot *string `protobuf:"bytes,6,opt,def=" json:"SpecialLoot,omitempty"`
	// * 特殊掉落的掉率
	SpecialLootRate *float32 `protobuf:"fixed32,7,opt,def=0" json:"SpecialLootRate,omitempty"`
	// * 特殊组掉落下限（少于不掉）
	SpecialLimitMin *uint32 `protobuf:"varint,8,opt,def=0" json:"SpecialLimitMin,omitempty"`
	// * 特殊组掉落上限（达到必掉）
	SpecialLimitMax  *uint32 `protobuf:"varint,9,opt,def=999" json:"SpecialLimitMax,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AUGUR) Reset()         { *m = AUGUR{} }
func (m *AUGUR) String() string { return proto.CompactTextString(m) }
func (*AUGUR) ProtoMessage()    {}

const Default_AUGUR_AugurLevel uint32 = 0
const Default_AUGUR_AugurCoin string = "VI_AC"
const Default_AUGUR_AugurCoinCount uint32 = 1
const Default_AUGUR_LevelUpN uint32 = 0
const Default_AUGUR_LevelUpM uint32 = 0
const Default_AUGUR_LevelUpSpace uint32 = 0
const Default_AUGUR_SpecialLootRate float32 = 0
const Default_AUGUR_SpecialLimitMin uint32 = 0
const Default_AUGUR_SpecialLimitMax uint32 = 999

func (m *AUGUR) GetAugurLevel() uint32 {
	if m != nil && m.AugurLevel != nil {
		return *m.AugurLevel
	}
	return Default_AUGUR_AugurLevel
}

func (m *AUGUR) GetAugurCoin() string {
	if m != nil && m.AugurCoin != nil {
		return *m.AugurCoin
	}
	return Default_AUGUR_AugurCoin
}

func (m *AUGUR) GetAugurCoinCount() uint32 {
	if m != nil && m.AugurCoinCount != nil {
		return *m.AugurCoinCount
	}
	return Default_AUGUR_AugurCoinCount
}

func (m *AUGUR) GetLevelUpN() uint32 {
	if m != nil && m.LevelUpN != nil {
		return *m.LevelUpN
	}
	return Default_AUGUR_LevelUpN
}

func (m *AUGUR) GetLevelUpM() uint32 {
	if m != nil && m.LevelUpM != nil {
		return *m.LevelUpM
	}
	return Default_AUGUR_LevelUpM
}

func (m *AUGUR) GetLevelUpSpace() uint32 {
	if m != nil && m.LevelUpSpace != nil {
		return *m.LevelUpSpace
	}
	return Default_AUGUR_LevelUpSpace
}

func (m *AUGUR) GetNormalLoot() string {
	if m != nil && m.NormalLoot != nil {
		return *m.NormalLoot
	}
	return ""
}

func (m *AUGUR) GetSpecialLoot() string {
	if m != nil && m.SpecialLoot != nil {
		return *m.SpecialLoot
	}
	return ""
}

func (m *AUGUR) GetSpecialLootRate() float32 {
	if m != nil && m.SpecialLootRate != nil {
		return *m.SpecialLootRate
	}
	return Default_AUGUR_SpecialLootRate
}

func (m *AUGUR) GetSpecialLimitMin() uint32 {
	if m != nil && m.SpecialLimitMin != nil {
		return *m.SpecialLimitMin
	}
	return Default_AUGUR_SpecialLimitMin
}

func (m *AUGUR) GetSpecialLimitMax() uint32 {
	if m != nil && m.SpecialLimitMax != nil {
		return *m.SpecialLimitMax
	}
	return Default_AUGUR_SpecialLimitMax
}

type AUGUR_ARRAY struct {
	Items            []*AUGUR `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AUGUR_ARRAY) Reset()         { *m = AUGUR_ARRAY{} }
func (m *AUGUR_ARRAY) String() string { return proto.CompactTextString(m) }
func (*AUGUR_ARRAY) ProtoMessage()    {}

func (m *AUGUR_ARRAY) GetItems() []*AUGUR {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

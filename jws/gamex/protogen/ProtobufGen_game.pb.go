// Code generated by protoc-gen-go.
// source: ProtobufGen_game.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type GAME struct {
	// * 玩法ID
	GameID *uint32 `protobuf:"varint,1,req,def=0" json:"GameID,omitempty"`
	// * IDS
	ExplainIDS       *string      `protobuf:"bytes,2,opt,def=" json:"ExplainIDS,omitempty"`
	Data_Template    []*GAME_Data `protobuf:"bytes,3,rep" json:"Data_Template,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GAME) Reset()         { *m = GAME{} }
func (m *GAME) String() string { return proto.CompactTextString(m) }
func (*GAME) ProtoMessage()    {}

const Default_GAME_GameID uint32 = 0

func (m *GAME) GetGameID() uint32 {
	if m != nil && m.GameID != nil {
		return *m.GameID
	}
	return Default_GAME_GameID
}

func (m *GAME) GetExplainIDS() string {
	if m != nil && m.ExplainIDS != nil {
		return *m.ExplainIDS
	}
	return ""
}

func (m *GAME) GetData_Template() []*GAME_Data {
	if m != nil {
		return m.Data_Template
	}
	return nil
}

type GAME_Data struct {
	// * 对应的数据表
	DataTable *string `protobuf:"bytes,1,opt,def=" json:"DataTable,omitempty"`
	// * 索引项
	IndexTable *string `protobuf:"bytes,2,opt,def=" json:"IndexTable,omitempty"`
	// * 索引参数
	IndexValue *string `protobuf:"bytes,3,opt,def=" json:"IndexValue,omitempty"`
	// * 数据项
	DataItem         *string `protobuf:"bytes,4,opt,def=" json:"DataItem,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GAME_Data) Reset()         { *m = GAME_Data{} }
func (m *GAME_Data) String() string { return proto.CompactTextString(m) }
func (*GAME_Data) ProtoMessage()    {}

func (m *GAME_Data) GetDataTable() string {
	if m != nil && m.DataTable != nil {
		return *m.DataTable
	}
	return ""
}

func (m *GAME_Data) GetIndexTable() string {
	if m != nil && m.IndexTable != nil {
		return *m.IndexTable
	}
	return ""
}

func (m *GAME_Data) GetIndexValue() string {
	if m != nil && m.IndexValue != nil {
		return *m.IndexValue
	}
	return ""
}

func (m *GAME_Data) GetDataItem() string {
	if m != nil && m.DataItem != nil {
		return *m.DataItem
	}
	return ""
}

type GAME_ARRAY struct {
	Items            []*GAME `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GAME_ARRAY) Reset()         { *m = GAME_ARRAY{} }
func (m *GAME_ARRAY) String() string { return proto.CompactTextString(m) }
func (*GAME_ARRAY) ProtoMessage()    {}

func (m *GAME_ARRAY) GetItems() []*GAME {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

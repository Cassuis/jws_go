// Code generated by protoc-gen-go.
// source: ProtobufGen_settings.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type SETTINGS struct {
	// * 活动ID
	ActivityID *uint32 `protobuf:"varint,1,req,def=0" json:"ActivityID,omitempty"`
	// * 活动类型
	ActivityType *uint32 `protobuf:"varint,2,opt,def=0" json:"ActivityType,omitempty"`
	// * 开启参数
	OpeningParameters *uint32 `protobuf:"varint,3,opt,def=0" json:"OpeningParameters,omitempty"`
	// * 任务ID
	QuestID          *uint32 `protobuf:"varint,4,req,def=0" json:"QuestID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SETTINGS) Reset()         { *m = SETTINGS{} }
func (m *SETTINGS) String() string { return proto.CompactTextString(m) }
func (*SETTINGS) ProtoMessage()    {}

const Default_SETTINGS_ActivityID uint32 = 0
const Default_SETTINGS_ActivityType uint32 = 0
const Default_SETTINGS_OpeningParameters uint32 = 0
const Default_SETTINGS_QuestID uint32 = 0

func (m *SETTINGS) GetActivityID() uint32 {
	if m != nil && m.ActivityID != nil {
		return *m.ActivityID
	}
	return Default_SETTINGS_ActivityID
}

func (m *SETTINGS) GetActivityType() uint32 {
	if m != nil && m.ActivityType != nil {
		return *m.ActivityType
	}
	return Default_SETTINGS_ActivityType
}

func (m *SETTINGS) GetOpeningParameters() uint32 {
	if m != nil && m.OpeningParameters != nil {
		return *m.OpeningParameters
	}
	return Default_SETTINGS_OpeningParameters
}

func (m *SETTINGS) GetQuestID() uint32 {
	if m != nil && m.QuestID != nil {
		return *m.QuestID
	}
	return Default_SETTINGS_QuestID
}

type SETTINGS_ARRAY struct {
	Items            []*SETTINGS `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SETTINGS_ARRAY) Reset()         { *m = SETTINGS_ARRAY{} }
func (m *SETTINGS_ARRAY) String() string { return proto.CompactTextString(m) }
func (*SETTINGS_ARRAY) ProtoMessage()    {}

func (m *SETTINGS_ARRAY) GetItems() []*SETTINGS {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

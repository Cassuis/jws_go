// Code generated by protoc-gen-go.
// source: ProtobufGen_skillpractice.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type SKILLPRACTICE struct {
	// * 修炼的ID
	PracticeID *uint32 `protobuf:"varint,1,req,def=0" json:"PracticeID,omitempty"`
	// * 修炼的等级
	PracticeLevel *uint32 `protobuf:"varint,2,req,def=0" json:"PracticeLevel,omitempty"`
	// * 货币ID
	CoinItem *string `protobuf:"bytes,3,opt,def=VI_SC" json:"CoinItem,omitempty"`
	// * 货币数量
	CoinCount *uint32 `protobuf:"varint,4,opt,def=1" json:"CoinCount,omitempty"`
	// * 攻
	ATK *uint32 `protobuf:"varint,5,opt,def=0" json:"ATK,omitempty"`
	// * 防
	DEF *uint32 `protobuf:"varint,6,opt,def=0" json:"DEF,omitempty"`
	// * 血
	HP *uint32 `protobuf:"varint,7,opt,def=0" json:"HP,omitempty"`
	// * 技能等级
	SkillLevel             *uint32                        `protobuf:"varint,8,opt,def=0" json:"SkillLevel,omitempty"`
	RelationSkill_Template []*SKILLPRACTICE_RelationSkill `protobuf:"bytes,9,rep" json:"RelationSkill_Template,omitempty"`
	XXX_unrecognized       []byte                         `json:"-"`
}

func (m *SKILLPRACTICE) Reset()         { *m = SKILLPRACTICE{} }
func (m *SKILLPRACTICE) String() string { return proto.CompactTextString(m) }
func (*SKILLPRACTICE) ProtoMessage()    {}

const Default_SKILLPRACTICE_PracticeID uint32 = 0
const Default_SKILLPRACTICE_PracticeLevel uint32 = 0
const Default_SKILLPRACTICE_CoinItem string = "VI_SC"
const Default_SKILLPRACTICE_CoinCount uint32 = 1
const Default_SKILLPRACTICE_ATK uint32 = 0
const Default_SKILLPRACTICE_DEF uint32 = 0
const Default_SKILLPRACTICE_HP uint32 = 0
const Default_SKILLPRACTICE_SkillLevel uint32 = 0

func (m *SKILLPRACTICE) GetPracticeID() uint32 {
	if m != nil && m.PracticeID != nil {
		return *m.PracticeID
	}
	return Default_SKILLPRACTICE_PracticeID
}

func (m *SKILLPRACTICE) GetPracticeLevel() uint32 {
	if m != nil && m.PracticeLevel != nil {
		return *m.PracticeLevel
	}
	return Default_SKILLPRACTICE_PracticeLevel
}

func (m *SKILLPRACTICE) GetCoinItem() string {
	if m != nil && m.CoinItem != nil {
		return *m.CoinItem
	}
	return Default_SKILLPRACTICE_CoinItem
}

func (m *SKILLPRACTICE) GetCoinCount() uint32 {
	if m != nil && m.CoinCount != nil {
		return *m.CoinCount
	}
	return Default_SKILLPRACTICE_CoinCount
}

func (m *SKILLPRACTICE) GetATK() uint32 {
	if m != nil && m.ATK != nil {
		return *m.ATK
	}
	return Default_SKILLPRACTICE_ATK
}

func (m *SKILLPRACTICE) GetDEF() uint32 {
	if m != nil && m.DEF != nil {
		return *m.DEF
	}
	return Default_SKILLPRACTICE_DEF
}

func (m *SKILLPRACTICE) GetHP() uint32 {
	if m != nil && m.HP != nil {
		return *m.HP
	}
	return Default_SKILLPRACTICE_HP
}

func (m *SKILLPRACTICE) GetSkillLevel() uint32 {
	if m != nil && m.SkillLevel != nil {
		return *m.SkillLevel
	}
	return Default_SKILLPRACTICE_SkillLevel
}

func (m *SKILLPRACTICE) GetRelationSkill_Template() []*SKILLPRACTICE_RelationSkill {
	if m != nil {
		return m.RelationSkill_Template
	}
	return nil
}

type SKILLPRACTICE_RelationSkill struct {
	// * 技能索引
	SkillIndex       *uint32 `protobuf:"varint,1,opt,def=0" json:"SkillIndex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SKILLPRACTICE_RelationSkill) Reset()         { *m = SKILLPRACTICE_RelationSkill{} }
func (m *SKILLPRACTICE_RelationSkill) String() string { return proto.CompactTextString(m) }
func (*SKILLPRACTICE_RelationSkill) ProtoMessage()    {}

const Default_SKILLPRACTICE_RelationSkill_SkillIndex uint32 = 0

func (m *SKILLPRACTICE_RelationSkill) GetSkillIndex() uint32 {
	if m != nil && m.SkillIndex != nil {
		return *m.SkillIndex
	}
	return Default_SKILLPRACTICE_RelationSkill_SkillIndex
}

type SKILLPRACTICE_ARRAY struct {
	Items            []*SKILLPRACTICE `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SKILLPRACTICE_ARRAY) Reset()         { *m = SKILLPRACTICE_ARRAY{} }
func (m *SKILLPRACTICE_ARRAY) String() string { return proto.CompactTextString(m) }
func (*SKILLPRACTICE_ARRAY) ProtoMessage()    {}

func (m *SKILLPRACTICE_ARRAY) GetItems() []*SKILLPRACTICE {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

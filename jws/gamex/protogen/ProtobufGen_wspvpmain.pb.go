// Code generated by protoc-gen-go.
// source: ProtobufGen_wspvpmain.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type WSPVPMAIN struct {
	// * 选人时限(单位秒)
	ChoiceMaxTime *uint32 `protobuf:"varint,1,opt,def=0" json:"ChoiceMaxTime,omitempty"`
	// * 战斗时限（单位秒）
	FightMaxTime *uint32 `protobuf:"varint,2,opt,def=0" json:"FightMaxTime,omitempty"`
	// * 每日锁定时间
	LockingTime *string `protobuf:"bytes,3,opt,def=" json:"LockingTime,omitempty"`
	// * 每日解锁时间
	UnLockTime *string `protobuf:"bytes,4,opt,def=" json:"UnLockTime,omitempty"`
	// * 伤害调整系数
	WsPvPDmgRate *float32 `protobuf:"fixed32,5,req,def=0" json:"WsPvPDmgRate,omitempty"`
	// * 初始阵容开启等级
	WsPvPInitialTeam *uint32 `protobuf:"varint,13,req,def=0" json:"WsPvPInitialTeam,omitempty"`
	// * PvP的每日回复次数
	WsPvPDailyLimit *uint32 `protobuf:"varint,6,req,def=0" json:"WsPvPDailyLimit,omitempty"`
	// * 机器人的主将ID
	BotHeroID *string `protobuf:"bytes,11,opt,def=" json:"BotHeroID,omitempty"`
	// * 机器人的星级数
	BotStarLevel *string `protobuf:"bytes,12,opt,def=" json:"BotStarLevel,omitempty"`
	// * 隐藏第3队的排名
	OneTeamHide *uint32 `protobuf:"varint,7,req,def=0" json:"OneTeamHide,omitempty"`
	// * 隐藏第2、3队的排名
	TwoTeamHide *uint32 `protobuf:"varint,8,req,def=0" json:"TwoTeamHide,omitempty"`
	// * 隐藏第1、2、3队的排名
	ThreeTeamHide    *uint32            `protobuf:"varint,9,req,def=0" json:"ThreeTeamHide,omitempty"`
	Fixed_Loot       []*WSPVPMAIN_Loot1 `protobuf:"bytes,10,rep" json:"Fixed_Loot,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *WSPVPMAIN) Reset()         { *m = WSPVPMAIN{} }
func (m *WSPVPMAIN) String() string { return proto.CompactTextString(m) }
func (*WSPVPMAIN) ProtoMessage()    {}

const Default_WSPVPMAIN_ChoiceMaxTime uint32 = 0
const Default_WSPVPMAIN_FightMaxTime uint32 = 0
const Default_WSPVPMAIN_WsPvPDmgRate float32 = 0
const Default_WSPVPMAIN_WsPvPInitialTeam uint32 = 0
const Default_WSPVPMAIN_WsPvPDailyLimit uint32 = 0
const Default_WSPVPMAIN_OneTeamHide uint32 = 0
const Default_WSPVPMAIN_TwoTeamHide uint32 = 0
const Default_WSPVPMAIN_ThreeTeamHide uint32 = 0

func (m *WSPVPMAIN) GetChoiceMaxTime() uint32 {
	if m != nil && m.ChoiceMaxTime != nil {
		return *m.ChoiceMaxTime
	}
	return Default_WSPVPMAIN_ChoiceMaxTime
}

func (m *WSPVPMAIN) GetFightMaxTime() uint32 {
	if m != nil && m.FightMaxTime != nil {
		return *m.FightMaxTime
	}
	return Default_WSPVPMAIN_FightMaxTime
}

func (m *WSPVPMAIN) GetLockingTime() string {
	if m != nil && m.LockingTime != nil {
		return *m.LockingTime
	}
	return ""
}

func (m *WSPVPMAIN) GetUnLockTime() string {
	if m != nil && m.UnLockTime != nil {
		return *m.UnLockTime
	}
	return ""
}

func (m *WSPVPMAIN) GetWsPvPDmgRate() float32 {
	if m != nil && m.WsPvPDmgRate != nil {
		return *m.WsPvPDmgRate
	}
	return Default_WSPVPMAIN_WsPvPDmgRate
}

func (m *WSPVPMAIN) GetWsPvPInitialTeam() uint32 {
	if m != nil && m.WsPvPInitialTeam != nil {
		return *m.WsPvPInitialTeam
	}
	return Default_WSPVPMAIN_WsPvPInitialTeam
}

func (m *WSPVPMAIN) GetWsPvPDailyLimit() uint32 {
	if m != nil && m.WsPvPDailyLimit != nil {
		return *m.WsPvPDailyLimit
	}
	return Default_WSPVPMAIN_WsPvPDailyLimit
}

func (m *WSPVPMAIN) GetBotHeroID() string {
	if m != nil && m.BotHeroID != nil {
		return *m.BotHeroID
	}
	return ""
}

func (m *WSPVPMAIN) GetBotStarLevel() string {
	if m != nil && m.BotStarLevel != nil {
		return *m.BotStarLevel
	}
	return ""
}

func (m *WSPVPMAIN) GetOneTeamHide() uint32 {
	if m != nil && m.OneTeamHide != nil {
		return *m.OneTeamHide
	}
	return Default_WSPVPMAIN_OneTeamHide
}

func (m *WSPVPMAIN) GetTwoTeamHide() uint32 {
	if m != nil && m.TwoTeamHide != nil {
		return *m.TwoTeamHide
	}
	return Default_WSPVPMAIN_TwoTeamHide
}

func (m *WSPVPMAIN) GetThreeTeamHide() uint32 {
	if m != nil && m.ThreeTeamHide != nil {
		return *m.ThreeTeamHide
	}
	return Default_WSPVPMAIN_ThreeTeamHide
}

func (m *WSPVPMAIN) GetFixed_Loot() []*WSPVPMAIN_Loot1 {
	if m != nil {
		return m.Fixed_Loot
	}
	return nil
}

type WSPVPMAIN_Loot1 struct {
	// * 竞技场地图
	WsPvPMap *string `protobuf:"bytes,1,opt,def=" json:"WsPvPMap,omitempty"`
	// * 出现概率
	MapProbability   *uint32 `protobuf:"varint,2,opt,def=0" json:"MapProbability,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WSPVPMAIN_Loot1) Reset()         { *m = WSPVPMAIN_Loot1{} }
func (m *WSPVPMAIN_Loot1) String() string { return proto.CompactTextString(m) }
func (*WSPVPMAIN_Loot1) ProtoMessage()    {}

const Default_WSPVPMAIN_Loot1_MapProbability uint32 = 0

func (m *WSPVPMAIN_Loot1) GetWsPvPMap() string {
	if m != nil && m.WsPvPMap != nil {
		return *m.WsPvPMap
	}
	return ""
}

func (m *WSPVPMAIN_Loot1) GetMapProbability() uint32 {
	if m != nil && m.MapProbability != nil {
		return *m.MapProbability
	}
	return Default_WSPVPMAIN_Loot1_MapProbability
}

type WSPVPMAIN_ARRAY struct {
	Items            []*WSPVPMAIN `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *WSPVPMAIN_ARRAY) Reset()         { *m = WSPVPMAIN_ARRAY{} }
func (m *WSPVPMAIN_ARRAY) String() string { return proto.CompactTextString(m) }
func (*WSPVPMAIN_ARRAY) ProtoMessage()    {}

func (m *WSPVPMAIN_ARRAY) GetItems() []*WSPVPMAIN {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

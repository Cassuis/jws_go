// Code generated by protoc-gen-go.
// source: ProtobufGen_hotactivitytime.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type HotActivityTime struct {
	// * 活动ID
	ActivityID *uint32 `protobuf:"varint,1,req,def=0" json:"ActivityID,omitempty"`
	// * 活动类型
	ActivityType *uint32 `protobuf:"varint,2,req,def=0" json:"ActivityType,omitempty"`
	// * 活动类型
	ActivityPID *uint32 `protobuf:"varint,15,req,def=0" json:"ActivityPID,omitempty"`
	// * 是否激活，0=关闭，1=激活
	ActivityValid *uint32 `protobuf:"varint,3,opt,def=0" json:"ActivityValid,omitempty"`
	// * 活动标题
	ActivityTitle *string `protobuf:"bytes,4,opt,def=" json:"ActivityTitle,omitempty"`
	// * 活动时间类型
	TimeType *uint32 `protobuf:"varint,5,opt,def=0" json:"TimeType,omitempty"`
	// * 参数1
	StartTime *string `protobuf:"bytes,6,opt,def=" json:"StartTime,omitempty"`
	// * 参数2
	EndTime *string `protobuf:"bytes,7,opt,def=" json:"EndTime,omitempty"`
	// * 持续时间（单位：分）
	Duration *uint32 `protobuf:"varint,16,opt,def=0" json:"Duration,omitempty"`
	// * 开启服务器组ID
	ServerGroupID *uint32 `protobuf:"varint,8,opt,def=0" json:"ServerGroupID,omitempty"`
	// * 渠道组ID
	ChannelGroupID *uint32 `protobuf:"varint,14,opt,def=0" json:"ChannelGroupID,omitempty"`
	// * 跳转类型
	TeleType *uint32 `protobuf:"varint,9,opt,def=0" json:"TeleType,omitempty"`
	// * 跳转ID
	TeleID *string `protobuf:"bytes,10,opt,def=" json:"TeleID,omitempty"`
	// * 对应跳转界面解锁的枚举
	ConditionID *uint32 `protobuf:"varint,11,opt,def=999" json:"ConditionID,omitempty"`
	// * 是否为Hot
	HotActivity *uint32 `protobuf:"varint,12,opt,def=0" json:"HotActivity,omitempty"`
	// * 页签文字
	TabIDS           *string `protobuf:"bytes,13,opt,def=" json:"TabIDS,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HotActivityTime) Reset()         { *m = HotActivityTime{} }
func (m *HotActivityTime) String() string { return proto.CompactTextString(m) }
func (*HotActivityTime) ProtoMessage()    {}

const Default_HotActivityTime_ActivityID uint32 = 0
const Default_HotActivityTime_ActivityType uint32 = 0
const Default_HotActivityTime_ActivityPID uint32 = 0
const Default_HotActivityTime_ActivityValid uint32 = 0
const Default_HotActivityTime_TimeType uint32 = 0
const Default_HotActivityTime_Duration uint32 = 0
const Default_HotActivityTime_ServerGroupID uint32 = 0
const Default_HotActivityTime_ChannelGroupID uint32 = 0
const Default_HotActivityTime_TeleType uint32 = 0
const Default_HotActivityTime_ConditionID uint32 = 999
const Default_HotActivityTime_HotActivity uint32 = 0

func (m *HotActivityTime) GetActivityID() uint32 {
	if m != nil && m.ActivityID != nil {
		return *m.ActivityID
	}
	return Default_HotActivityTime_ActivityID
}

func (m *HotActivityTime) GetActivityType() uint32 {
	if m != nil && m.ActivityType != nil {
		return *m.ActivityType
	}
	return Default_HotActivityTime_ActivityType
}

func (m *HotActivityTime) GetActivityPID() uint32 {
	if m != nil && m.ActivityPID != nil {
		return *m.ActivityPID
	}
	return Default_HotActivityTime_ActivityPID
}

func (m *HotActivityTime) GetActivityValid() uint32 {
	if m != nil && m.ActivityValid != nil {
		return *m.ActivityValid
	}
	return Default_HotActivityTime_ActivityValid
}

func (m *HotActivityTime) GetActivityTitle() string {
	if m != nil && m.ActivityTitle != nil {
		return *m.ActivityTitle
	}
	return ""
}

func (m *HotActivityTime) GetTimeType() uint32 {
	if m != nil && m.TimeType != nil {
		return *m.TimeType
	}
	return Default_HotActivityTime_TimeType
}

func (m *HotActivityTime) GetStartTime() string {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return ""
}

func (m *HotActivityTime) GetEndTime() string {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return ""
}

func (m *HotActivityTime) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return Default_HotActivityTime_Duration
}

func (m *HotActivityTime) GetServerGroupID() uint32 {
	if m != nil && m.ServerGroupID != nil {
		return *m.ServerGroupID
	}
	return Default_HotActivityTime_ServerGroupID
}

func (m *HotActivityTime) GetChannelGroupID() uint32 {
	if m != nil && m.ChannelGroupID != nil {
		return *m.ChannelGroupID
	}
	return Default_HotActivityTime_ChannelGroupID
}

func (m *HotActivityTime) GetTeleType() uint32 {
	if m != nil && m.TeleType != nil {
		return *m.TeleType
	}
	return Default_HotActivityTime_TeleType
}

func (m *HotActivityTime) GetTeleID() string {
	if m != nil && m.TeleID != nil {
		return *m.TeleID
	}
	return ""
}

func (m *HotActivityTime) GetConditionID() uint32 {
	if m != nil && m.ConditionID != nil {
		return *m.ConditionID
	}
	return Default_HotActivityTime_ConditionID
}

func (m *HotActivityTime) GetHotActivity() uint32 {
	if m != nil && m.HotActivity != nil {
		return *m.HotActivity
	}
	return Default_HotActivityTime_HotActivity
}

func (m *HotActivityTime) GetTabIDS() string {
	if m != nil && m.TabIDS != nil {
		return *m.TabIDS
	}
	return ""
}

type HotActivityTime_ARRAY struct {
	Items            []*HotActivityTime `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *HotActivityTime_ARRAY) Reset()         { *m = HotActivityTime_ARRAY{} }
func (m *HotActivityTime_ARRAY) String() string { return proto.CompactTextString(m) }
func (*HotActivityTime_ARRAY) ProtoMessage()    {}

func (m *HotActivityTime_ARRAY) GetItems() []*HotActivityTime {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

// Code generated by protoc-gen-go.
// source: ProtobufGen_bscpvppool.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type BSCPVPPOOL struct {
	// * 段号
	PoolID *uint32 `protobuf:"varint,1,req,def=0" json:"PoolID,omitempty"`
	// * 段内人数
	PoolLength       *uint32 `protobuf:"varint,2,opt,def=0" json:"PoolLength,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BSCPVPPOOL) Reset()         { *m = BSCPVPPOOL{} }
func (m *BSCPVPPOOL) String() string { return proto.CompactTextString(m) }
func (*BSCPVPPOOL) ProtoMessage()    {}

const Default_BSCPVPPOOL_PoolID uint32 = 0
const Default_BSCPVPPOOL_PoolLength uint32 = 0

func (m *BSCPVPPOOL) GetPoolID() uint32 {
	if m != nil && m.PoolID != nil {
		return *m.PoolID
	}
	return Default_BSCPVPPOOL_PoolID
}

func (m *BSCPVPPOOL) GetPoolLength() uint32 {
	if m != nil && m.PoolLength != nil {
		return *m.PoolLength
	}
	return Default_BSCPVPPOOL_PoolLength
}

type BSCPVPPOOL_ARRAY struct {
	Items            []*BSCPVPPOOL `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *BSCPVPPOOL_ARRAY) Reset()         { *m = BSCPVPPOOL_ARRAY{} }
func (m *BSCPVPPOOL_ARRAY) String() string { return proto.CompactTextString(m) }
func (*BSCPVPPOOL_ARRAY) ProtoMessage()    {}

func (m *BSCPVPPOOL_ARRAY) GetItems() []*BSCPVPPOOL {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

// Code generated by protoc-gen-go.
// source: ProtobufGen_hotpackage.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type HOTPACKAGE struct {
	// * 礼包ID
	HotPackageID *uint32 `protobuf:"varint,1,req,def=0" json:"HotPackageID,omitempty"`
	// * 礼包类型
	HotPackageType *uint32 `protobuf:"varint,2,opt,def=0" json:"HotPackageType,omitempty"`
	// * 礼包子ID
	HotPackageSubID *uint32 `protobuf:"varint,3,opt,def=1" json:"HotPackageSubID,omitempty"`
	// * 是否激活，0=关闭，1=激活
	ActivityValid *uint32 `protobuf:"varint,4,opt,def=0" json:"ActivityValid,omitempty"`
	// * 开启服务器组ID
	ServerGroupID *uint32 `protobuf:"varint,5,opt,def=0" json:"ServerGroupID,omitempty"`
	// * 商品名称
	HotPackage *string `protobuf:"bytes,6,opt,def=" json:"HotPackage,omitempty"`
	// * 礼包时间类型
	TimeType *uint32 `protobuf:"varint,7,opt,def=0" json:"TimeType,omitempty"`
	// * 上架时间
	StartTime *string `protobuf:"bytes,8,opt,def=" json:"StartTime,omitempty"`
	// * 持续时间（单位：小时）
	Duration *uint32 `protobuf:"varint,9,opt,def=0" json:"Duration,omitempty"`
	// * 是否因为关闭界面失效（仅限特殊条件礼包）
	IsLost_ByClosePanel *uint32 `protobuf:"varint,28,opt,def=1" json:"IsLost_ByClosePanel,omitempty"`
	// * 礼包可用的等级下限[闭区间]
	LevelLimitMin *uint32 `protobuf:"varint,25,opt,def=0" json:"LevelLimitMin,omitempty"`
	// * 礼包可用的等级上限[闭区间]
	LevelLimitMax *uint32 `protobuf:"varint,26,opt,def=0" json:"LevelLimitMax,omitempty"`
	// * 对应VIP等级
	VIPLevel *uint32 `protobuf:"varint,10,opt,def=0" json:"VIPLevel,omitempty"`
	// * 购买所需的IAPID
	IAPID *string `protobuf:"bytes,11,opt,def=" json:"IAPID,omitempty"`
	// * 限购类型
	LimitType *uint32 `protobuf:"varint,12,opt,def=0" json:"LimitType,omitempty"`
	// * 限购次数
	TimesLimit *uint32 `protobuf:"varint,13,opt,def=1" json:"TimesLimit,omitempty"`
	// * 完成条件类型
	FCType *uint32 `protobuf:"varint,14,opt,def=0" json:"FCType,omitempty"`
	// * 完成条件数值参数1
	FCValueIP1 *uint32 `protobuf:"varint,15,opt,def=1" json:"FCValueIP1,omitempty"`
	// * 完成条件数值参数2
	FCValueIP2 *uint32 `protobuf:"varint,16,opt,def=0" json:"FCValueIP2,omitempty"`
	// * 完成条件字符串参数1
	FCValueSP1 *string `protobuf:"bytes,17,opt,def=" json:"FCValueSP1,omitempty"`
	// * 完成条件字符串参数2
	FCValueSP2 *string `protobuf:"bytes,18,opt,def=" json:"FCValueSP2,omitempty"`
	// * 背景（标签）模板
	BackImage *uint32 `protobuf:"varint,27,opt,def=1" json:"BackImage,omitempty"`
	// * 任务名称
	QuestName *string `protobuf:"bytes,19,opt,def=" json:"QuestName,omitempty"`
	// * 任务描述
	QuestDes *string `protobuf:"bytes,20,opt,def=" json:"QuestDes,omitempty"`
	// * 获得钻石数量
	HCValue *uint32 `protobuf:"varint,21,opt,def=0" json:"HCValue,omitempty"`
	// * 原价
	ShowValue *uint32 `protobuf:"varint,22,opt,def=0" json:"ShowValue,omitempty"`
	// * 返现比例
	CashbackRatio        *uint32                       `protobuf:"varint,23,opt,def=100" json:"CashbackRatio,omitempty"`
	HotPackageGoods_Temp []*HOTPACKAGE_HotPackageGoods `protobuf:"bytes,24,rep" json:"HotPackageGoods_Temp,omitempty"`
	XXX_unrecognized     []byte                        `json:"-"`
}

func (m *HOTPACKAGE) Reset()         { *m = HOTPACKAGE{} }
func (m *HOTPACKAGE) String() string { return proto.CompactTextString(m) }
func (*HOTPACKAGE) ProtoMessage()    {}

const Default_HOTPACKAGE_HotPackageID uint32 = 0
const Default_HOTPACKAGE_HotPackageType uint32 = 0
const Default_HOTPACKAGE_HotPackageSubID uint32 = 1
const Default_HOTPACKAGE_ActivityValid uint32 = 0
const Default_HOTPACKAGE_ServerGroupID uint32 = 0
const Default_HOTPACKAGE_TimeType uint32 = 0
const Default_HOTPACKAGE_Duration uint32 = 0
const Default_HOTPACKAGE_IsLost_ByClosePanel uint32 = 1
const Default_HOTPACKAGE_LevelLimitMin uint32 = 0
const Default_HOTPACKAGE_LevelLimitMax uint32 = 0
const Default_HOTPACKAGE_VIPLevel uint32 = 0
const Default_HOTPACKAGE_LimitType uint32 = 0
const Default_HOTPACKAGE_TimesLimit uint32 = 1
const Default_HOTPACKAGE_FCType uint32 = 0
const Default_HOTPACKAGE_FCValueIP1 uint32 = 1
const Default_HOTPACKAGE_FCValueIP2 uint32 = 0
const Default_HOTPACKAGE_BackImage uint32 = 1
const Default_HOTPACKAGE_HCValue uint32 = 0
const Default_HOTPACKAGE_ShowValue uint32 = 0
const Default_HOTPACKAGE_CashbackRatio uint32 = 100

func (m *HOTPACKAGE) GetHotPackageID() uint32 {
	if m != nil && m.HotPackageID != nil {
		return *m.HotPackageID
	}
	return Default_HOTPACKAGE_HotPackageID
}

func (m *HOTPACKAGE) GetHotPackageType() uint32 {
	if m != nil && m.HotPackageType != nil {
		return *m.HotPackageType
	}
	return Default_HOTPACKAGE_HotPackageType
}

func (m *HOTPACKAGE) GetHotPackageSubID() uint32 {
	if m != nil && m.HotPackageSubID != nil {
		return *m.HotPackageSubID
	}
	return Default_HOTPACKAGE_HotPackageSubID
}

func (m *HOTPACKAGE) GetActivityValid() uint32 {
	if m != nil && m.ActivityValid != nil {
		return *m.ActivityValid
	}
	return Default_HOTPACKAGE_ActivityValid
}

func (m *HOTPACKAGE) GetServerGroupID() uint32 {
	if m != nil && m.ServerGroupID != nil {
		return *m.ServerGroupID
	}
	return Default_HOTPACKAGE_ServerGroupID
}

func (m *HOTPACKAGE) GetHotPackage() string {
	if m != nil && m.HotPackage != nil {
		return *m.HotPackage
	}
	return ""
}

func (m *HOTPACKAGE) GetTimeType() uint32 {
	if m != nil && m.TimeType != nil {
		return *m.TimeType
	}
	return Default_HOTPACKAGE_TimeType
}

func (m *HOTPACKAGE) GetStartTime() string {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return ""
}

func (m *HOTPACKAGE) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return Default_HOTPACKAGE_Duration
}

func (m *HOTPACKAGE) GetIsLost_ByClosePanel() uint32 {
	if m != nil && m.IsLost_ByClosePanel != nil {
		return *m.IsLost_ByClosePanel
	}
	return Default_HOTPACKAGE_IsLost_ByClosePanel
}

func (m *HOTPACKAGE) GetLevelLimitMin() uint32 {
	if m != nil && m.LevelLimitMin != nil {
		return *m.LevelLimitMin
	}
	return Default_HOTPACKAGE_LevelLimitMin
}

func (m *HOTPACKAGE) GetLevelLimitMax() uint32 {
	if m != nil && m.LevelLimitMax != nil {
		return *m.LevelLimitMax
	}
	return Default_HOTPACKAGE_LevelLimitMax
}

func (m *HOTPACKAGE) GetVIPLevel() uint32 {
	if m != nil && m.VIPLevel != nil {
		return *m.VIPLevel
	}
	return Default_HOTPACKAGE_VIPLevel
}

func (m *HOTPACKAGE) GetIAPID() string {
	if m != nil && m.IAPID != nil {
		return *m.IAPID
	}
	return ""
}

func (m *HOTPACKAGE) GetLimitType() uint32 {
	if m != nil && m.LimitType != nil {
		return *m.LimitType
	}
	return Default_HOTPACKAGE_LimitType
}

func (m *HOTPACKAGE) GetTimesLimit() uint32 {
	if m != nil && m.TimesLimit != nil {
		return *m.TimesLimit
	}
	return Default_HOTPACKAGE_TimesLimit
}

func (m *HOTPACKAGE) GetFCType() uint32 {
	if m != nil && m.FCType != nil {
		return *m.FCType
	}
	return Default_HOTPACKAGE_FCType
}

func (m *HOTPACKAGE) GetFCValueIP1() uint32 {
	if m != nil && m.FCValueIP1 != nil {
		return *m.FCValueIP1
	}
	return Default_HOTPACKAGE_FCValueIP1
}

func (m *HOTPACKAGE) GetFCValueIP2() uint32 {
	if m != nil && m.FCValueIP2 != nil {
		return *m.FCValueIP2
	}
	return Default_HOTPACKAGE_FCValueIP2
}

func (m *HOTPACKAGE) GetFCValueSP1() string {
	if m != nil && m.FCValueSP1 != nil {
		return *m.FCValueSP1
	}
	return ""
}

func (m *HOTPACKAGE) GetFCValueSP2() string {
	if m != nil && m.FCValueSP2 != nil {
		return *m.FCValueSP2
	}
	return ""
}

func (m *HOTPACKAGE) GetBackImage() uint32 {
	if m != nil && m.BackImage != nil {
		return *m.BackImage
	}
	return Default_HOTPACKAGE_BackImage
}

func (m *HOTPACKAGE) GetQuestName() string {
	if m != nil && m.QuestName != nil {
		return *m.QuestName
	}
	return ""
}

func (m *HOTPACKAGE) GetQuestDes() string {
	if m != nil && m.QuestDes != nil {
		return *m.QuestDes
	}
	return ""
}

func (m *HOTPACKAGE) GetHCValue() uint32 {
	if m != nil && m.HCValue != nil {
		return *m.HCValue
	}
	return Default_HOTPACKAGE_HCValue
}

func (m *HOTPACKAGE) GetShowValue() uint32 {
	if m != nil && m.ShowValue != nil {
		return *m.ShowValue
	}
	return Default_HOTPACKAGE_ShowValue
}

func (m *HOTPACKAGE) GetCashbackRatio() uint32 {
	if m != nil && m.CashbackRatio != nil {
		return *m.CashbackRatio
	}
	return Default_HOTPACKAGE_CashbackRatio
}

func (m *HOTPACKAGE) GetHotPackageGoods_Temp() []*HOTPACKAGE_HotPackageGoods {
	if m != nil {
		return m.HotPackageGoods_Temp
	}
	return nil
}

type HOTPACKAGE_HotPackageGoods struct {
	// * 物品ID
	GoodsID *string `protobuf:"bytes,1,opt,def=" json:"GoodsID,omitempty"`
	// * 数量
	GoodsCount       *uint32 `protobuf:"varint,2,opt,def=0" json:"GoodsCount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HOTPACKAGE_HotPackageGoods) Reset()         { *m = HOTPACKAGE_HotPackageGoods{} }
func (m *HOTPACKAGE_HotPackageGoods) String() string { return proto.CompactTextString(m) }
func (*HOTPACKAGE_HotPackageGoods) ProtoMessage()    {}

const Default_HOTPACKAGE_HotPackageGoods_GoodsCount uint32 = 0

func (m *HOTPACKAGE_HotPackageGoods) GetGoodsID() string {
	if m != nil && m.GoodsID != nil {
		return *m.GoodsID
	}
	return ""
}

func (m *HOTPACKAGE_HotPackageGoods) GetGoodsCount() uint32 {
	if m != nil && m.GoodsCount != nil {
		return *m.GoodsCount
	}
	return Default_HOTPACKAGE_HotPackageGoods_GoodsCount
}

type HOTPACKAGE_ARRAY struct {
	Items            []*HOTPACKAGE `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *HOTPACKAGE_ARRAY) Reset()         { *m = HOTPACKAGE_ARRAY{} }
func (m *HOTPACKAGE_ARRAY) String() string { return proto.CompactTextString(m) }
func (*HOTPACKAGE_ARRAY) ProtoMessage()    {}

func (m *HOTPACKAGE_ARRAY) GetItems() []*HOTPACKAGE {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

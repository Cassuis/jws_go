// Code generated by protoc-gen-go.
// source: ProtobufGen_newstarlvupsettings.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type NEWSTARLVUPSETTINGS struct {
	// * 单次操作增加的经验值
	EXPPerOperate *uint32 `protobuf:"varint,1,req,def=0" json:"EXPPerOperate,omitempty"`
	// * 小暴击倍率
	LittleBonus *uint32 `protobuf:"varint,2,req,def=0" json:"LittleBonus,omitempty"`
	// * 大暴击倍率
	BigBonus *uint32 `protobuf:"varint,3,req,def=0" json:"BigBonus,omitempty"`
	// * 单次强化消耗
	CostCoin *string `protobuf:"bytes,4,req,def=" json:"CostCoin,omitempty"`
	// * 单次强化消耗
	CostForEach *uint32 `protobuf:"varint,5,req,def=0" json:"CostForEach,omitempty"`
	// * 1货币相当于多少钻石（计算的时候用货币数直接乘这个系数就是钻石数）
	HCRatio          *float32 `protobuf:"fixed32,6,req,def=0" json:"HCRatio,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *NEWSTARLVUPSETTINGS) Reset()         { *m = NEWSTARLVUPSETTINGS{} }
func (m *NEWSTARLVUPSETTINGS) String() string { return proto.CompactTextString(m) }
func (*NEWSTARLVUPSETTINGS) ProtoMessage()    {}

const Default_NEWSTARLVUPSETTINGS_EXPPerOperate uint32 = 0
const Default_NEWSTARLVUPSETTINGS_LittleBonus uint32 = 0
const Default_NEWSTARLVUPSETTINGS_BigBonus uint32 = 0
const Default_NEWSTARLVUPSETTINGS_CostForEach uint32 = 0
const Default_NEWSTARLVUPSETTINGS_HCRatio float32 = 0

func (m *NEWSTARLVUPSETTINGS) GetEXPPerOperate() uint32 {
	if m != nil && m.EXPPerOperate != nil {
		return *m.EXPPerOperate
	}
	return Default_NEWSTARLVUPSETTINGS_EXPPerOperate
}

func (m *NEWSTARLVUPSETTINGS) GetLittleBonus() uint32 {
	if m != nil && m.LittleBonus != nil {
		return *m.LittleBonus
	}
	return Default_NEWSTARLVUPSETTINGS_LittleBonus
}

func (m *NEWSTARLVUPSETTINGS) GetBigBonus() uint32 {
	if m != nil && m.BigBonus != nil {
		return *m.BigBonus
	}
	return Default_NEWSTARLVUPSETTINGS_BigBonus
}

func (m *NEWSTARLVUPSETTINGS) GetCostCoin() string {
	if m != nil && m.CostCoin != nil {
		return *m.CostCoin
	}
	return ""
}

func (m *NEWSTARLVUPSETTINGS) GetCostForEach() uint32 {
	if m != nil && m.CostForEach != nil {
		return *m.CostForEach
	}
	return Default_NEWSTARLVUPSETTINGS_CostForEach
}

func (m *NEWSTARLVUPSETTINGS) GetHCRatio() float32 {
	if m != nil && m.HCRatio != nil {
		return *m.HCRatio
	}
	return Default_NEWSTARLVUPSETTINGS_HCRatio
}

type NEWSTARLVUPSETTINGS_ARRAY struct {
	Items            []*NEWSTARLVUPSETTINGS `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *NEWSTARLVUPSETTINGS_ARRAY) Reset()         { *m = NEWSTARLVUPSETTINGS_ARRAY{} }
func (m *NEWSTARLVUPSETTINGS_ARRAY) String() string { return proto.CompactTextString(m) }
func (*NEWSTARLVUPSETTINGS_ARRAY) ProtoMessage()    {}

func (m *NEWSTARLVUPSETTINGS_ARRAY) GetItems() []*NEWSTARLVUPSETTINGS {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

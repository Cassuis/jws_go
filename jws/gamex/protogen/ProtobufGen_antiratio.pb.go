// Code generated by protoc-gen-go.
// source: ProtobufGen_antiratio.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ANTIRATIO struct {
	// * 特技加成
	TrickBonus *float32 `protobuf:"fixed32,1,req,def=0" json:"TrickBonus,omitempty"`
	// * PVP加成
	PVPBonus *float32 `protobuf:"fixed32,2,req,def=0" json:"PVPBonus,omitempty"`
	// * 常规加成
	CommonBonus      *float32 `protobuf:"fixed32,3,req,def=0" json:"CommonBonus,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ANTIRATIO) Reset()         { *m = ANTIRATIO{} }
func (m *ANTIRATIO) String() string { return proto.CompactTextString(m) }
func (*ANTIRATIO) ProtoMessage()    {}

const Default_ANTIRATIO_TrickBonus float32 = 0
const Default_ANTIRATIO_PVPBonus float32 = 0
const Default_ANTIRATIO_CommonBonus float32 = 0

func (m *ANTIRATIO) GetTrickBonus() float32 {
	if m != nil && m.TrickBonus != nil {
		return *m.TrickBonus
	}
	return Default_ANTIRATIO_TrickBonus
}

func (m *ANTIRATIO) GetPVPBonus() float32 {
	if m != nil && m.PVPBonus != nil {
		return *m.PVPBonus
	}
	return Default_ANTIRATIO_PVPBonus
}

func (m *ANTIRATIO) GetCommonBonus() float32 {
	if m != nil && m.CommonBonus != nil {
		return *m.CommonBonus
	}
	return Default_ANTIRATIO_CommonBonus
}

type ANTIRATIO_ARRAY struct {
	Items            []*ANTIRATIO `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ANTIRATIO_ARRAY) Reset()         { *m = ANTIRATIO_ARRAY{} }
func (m *ANTIRATIO_ARRAY) String() string { return proto.CompactTextString(m) }
func (*ANTIRATIO_ARRAY) ProtoMessage()    {}

func (m *ANTIRATIO_ARRAY) GetItems() []*ANTIRATIO {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

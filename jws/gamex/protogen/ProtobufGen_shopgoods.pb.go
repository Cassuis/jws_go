// Code generated by protoc-gen-go.
// source: ProtobufGen_shopgoods.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type SHOPGOODS struct {
	// * 商品ID
	GoodsID *string `protobuf:"bytes,1,req,def=" json:"GoodsID,omitempty"`
	// * 物品ID
	ItemID *string `protobuf:"bytes,2,opt,def=" json:"ItemID,omitempty"`
	// * 数量
	GoodsCount *uint32 `protobuf:"varint,3,opt,def=0" json:"GoodsCount,omitempty"`
	// * 购买所需物品ID
	CoinItemID *string `protobuf:"bytes,4,opt,def=VI_HC" json:"CoinItemID,omitempty"`
	// * 现价
	CurrentPrice *uint32 `protobuf:"varint,5,opt,def=0" json:"CurrentPrice,omitempty"`
	// * 原价
	OriginalCost *uint32 `protobuf:"varint,6,opt,def=0" json:"OriginalCost,omitempty"`
	// * 0.0
	VIPLimit *uint32 `protobuf:"varint,7,opt,def=0" json:"VIPLimit,omitempty"`
	// * 限购数量
	CountLimit *uint32 `protobuf:"varint,8,opt,def=0" json:"CountLimit,omitempty"`
	// * 限购类型
	LimitType *string `protobuf:"bytes,9,opt,def=Forever" json:"LimitType,omitempty"`
	// * 开始时间
	StartTime *string `protobuf:"bytes,10,opt,def=" json:"StartTime,omitempty"`
	// * 结束时间
	EndTime          *string `protobuf:"bytes,11,opt,def=" json:"EndTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SHOPGOODS) Reset()         { *m = SHOPGOODS{} }
func (m *SHOPGOODS) String() string { return proto.CompactTextString(m) }
func (*SHOPGOODS) ProtoMessage()    {}

const Default_SHOPGOODS_GoodsCount uint32 = 0
const Default_SHOPGOODS_CoinItemID string = "VI_HC"
const Default_SHOPGOODS_CurrentPrice uint32 = 0
const Default_SHOPGOODS_OriginalCost uint32 = 0
const Default_SHOPGOODS_VIPLimit uint32 = 0
const Default_SHOPGOODS_CountLimit uint32 = 0
const Default_SHOPGOODS_LimitType string = "Forever"

func (m *SHOPGOODS) GetGoodsID() string {
	if m != nil && m.GoodsID != nil {
		return *m.GoodsID
	}
	return ""
}

func (m *SHOPGOODS) GetItemID() string {
	if m != nil && m.ItemID != nil {
		return *m.ItemID
	}
	return ""
}

func (m *SHOPGOODS) GetGoodsCount() uint32 {
	if m != nil && m.GoodsCount != nil {
		return *m.GoodsCount
	}
	return Default_SHOPGOODS_GoodsCount
}

func (m *SHOPGOODS) GetCoinItemID() string {
	if m != nil && m.CoinItemID != nil {
		return *m.CoinItemID
	}
	return Default_SHOPGOODS_CoinItemID
}

func (m *SHOPGOODS) GetCurrentPrice() uint32 {
	if m != nil && m.CurrentPrice != nil {
		return *m.CurrentPrice
	}
	return Default_SHOPGOODS_CurrentPrice
}

func (m *SHOPGOODS) GetOriginalCost() uint32 {
	if m != nil && m.OriginalCost != nil {
		return *m.OriginalCost
	}
	return Default_SHOPGOODS_OriginalCost
}

func (m *SHOPGOODS) GetVIPLimit() uint32 {
	if m != nil && m.VIPLimit != nil {
		return *m.VIPLimit
	}
	return Default_SHOPGOODS_VIPLimit
}

func (m *SHOPGOODS) GetCountLimit() uint32 {
	if m != nil && m.CountLimit != nil {
		return *m.CountLimit
	}
	return Default_SHOPGOODS_CountLimit
}

func (m *SHOPGOODS) GetLimitType() string {
	if m != nil && m.LimitType != nil {
		return *m.LimitType
	}
	return Default_SHOPGOODS_LimitType
}

func (m *SHOPGOODS) GetStartTime() string {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return ""
}

func (m *SHOPGOODS) GetEndTime() string {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return ""
}

type SHOPGOODS_ARRAY struct {
	Items            []*SHOPGOODS `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SHOPGOODS_ARRAY) Reset()         { *m = SHOPGOODS_ARRAY{} }
func (m *SHOPGOODS_ARRAY) String() string { return proto.CompactTextString(m) }
func (*SHOPGOODS_ARRAY) ProtoMessage()    {}

func (m *SHOPGOODS_ARRAY) GetItems() []*SHOPGOODS {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

// Code generated by protoc-gen-go.
// source: ProtobufGen_item.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Item struct {
	// * 物品的id
	ID *string `protobuf:"bytes,1,req,def=" json:"ID,omitempty"`
	// * 物品的类型
	Type *string `protobuf:"bytes,2,opt,def=" json:"Type,omitempty"`
	// * 如果物品类型是装备，其装备部位
	Part *string `protobuf:"bytes,3,opt,def=None" json:"Part,omitempty"`
	// * 角色
	RoleOnly *int32 `protobuf:"varint,4,opt,def=-1" json:"RoleOnly,omitempty"`
	// * 使用此物品所需要的角色等级
	EnableLevel *int32 `protobuf:"varint,5,opt,def=0" json:"EnableLevel,omitempty"`
	// * 物品的tier
	Tier *int32 `protobuf:"varint,6,opt,def=0" json:"Tier,omitempty"`
	// * 物品的品质
	RareLevel *int32 `protobuf:"varint,7,opt,def=0" json:"RareLevel,omitempty"`
	// * 堆叠数量
	StoreNum *int64 `protobuf:"varint,8,opt,def=99999" json:"StoreNum,omitempty"`
	// * 超出堆叠数量是否丢弃
	StackDrop *int32 `protobuf:"varint,9,opt,def=0" json:"StackDrop,omitempty"`
	// * 装备能被强化到的最高等级
	FuseLevelLimit *int32 `protobuf:"varint,10,opt,def=0" json:"FuseLevelLimit,omitempty"`
	// * 物品卖出时所收获的SC数量，"-1"表示不可出售
	LootScore *int32 `protobuf:"varint,11,opt,def=-1" json:"LootScore,omitempty"`
	// * "-1"表示没有套装属性，填写id则去SetGear表查找对应数据
	SetGear *int32 `protobuf:"varint,12,opt,def=0" json:"SetGear,omitempty"`
	// * 物品的名称
	NameIDS *string `protobuf:"bytes,13,opt,def=" json:"NameIDS,omitempty"`
	// * 物品的描述
	DescriptionIDS *string `protobuf:"bytes,14,opt,def=" json:"DescriptionIDS,omitempty"`
	// * 物品的图标
	Icon *string `protobuf:"bytes,15,opt,def=" json:"Icon,omitempty"`
	// * 物品的模型
	Instance *string `protobuf:"bytes,16,opt,def=" json:"Instance,omitempty"`
	// * 装备的基础攻击力
	Attack *float32 `protobuf:"fixed32,17,opt,def=0" json:"Attack,omitempty"`
	// * 装备的基础防御力
	Defense *float32 `protobuf:"fixed32,18,opt,def=0" json:"Defense,omitempty"`
	// * 装备的基础生命值
	HP *float32 `protobuf:"fixed32,19,opt,def=0" json:"HP,omitempty"`
	// * 随机属性池
	TrickRuleID *string `protobuf:"bytes,20,opt,def=" json:"TrickRuleID,omitempty"`
	// * 是否具有天地人属性
	IsTDR *uint32 `protobuf:"varint,21,opt,def=0" json:"IsTDR,omitempty"`
	// * 属性类型
	AttrType *string `protobuf:"bytes,22,opt,def=" json:"AttrType,omitempty"`
	// * 属性数值
	AttrValue *uint32 `protobuf:"varint,23,opt,def=0" json:"AttrValue,omitempty"`
	// * 效果ID
	BuffID *string `protobuf:"bytes,24,opt,def=" json:"BuffID,omitempty"`
	// * 合成公式ID
	FormulaID *uint32 `protobuf:"varint,25,opt,def=0" json:"FormulaID,omitempty"`
	// * 掉落关卡
	DropKingdom *string `protobuf:"bytes,26,opt,def=" json:"DropKingdom,omitempty"`
	// * 掉落页面
	DropPage *string `protobuf:"bytes,27,opt,def=" json:"DropPage,omitempty"`
	// * 战队等级限制
	CorpLevelLimit *int32 `protobuf:"varint,28,opt,def=1" json:"CorpLevelLimit,omitempty"`
	// * 装备时限（h）
	TimeLimit *uint32 `protobuf:"varint,29,opt,def=99999" json:"TimeLimit,omitempty"`
	// * 时限类型
	TimeMode *int32 `protobuf:"varint,30,opt,def=0" json:"TimeMode,omitempty"`
	// * 累加时间上限
	MaxTime *int32 `protobuf:"varint,31,opt,def=8760" json:"MaxTime,omitempty"`
	// * 军阶要求
	RankLimit *string `protobuf:"bytes,32,opt,def=" json:"RankLimit,omitempty"`
	// * 最大拥有数量
	OwnMaxNum *uint32 `protobuf:"varint,33,opt,def=999999" json:"OwnMaxNum,omitempty"`
	// * 升星成功率
	StarUpRate *float32 `protobuf:"fixed32,34,opt,def=0" json:"StarUpRate,omitempty"`
	// * 升星祝福值
	StarBless *uint32 `protobuf:"varint,35,opt,def=0" json:"StarBless,omitempty"`
	// * 龙玉等级
	JadeLevel *int32 `protobuf:"varint,36,opt,def=0" json:"JadeLevel,omitempty"`
	// * 货币
	Coin *string `protobuf:"bytes,37,opt,def=VI_HC" json:"Coin,omitempty"`
	// * 价格
	CoinPrice *uint32 `protobuf:"varint,38,opt,def=0" json:"CoinPrice,omitempty"`
	// * 掉落纯文字描述
	DropDescription *string `protobuf:"bytes,39,opt,def=" json:"DropDescription,omitempty"`
	// * 展示图标，时装专用
	DisplayIcon *string `protobuf:"bytes,40,opt,def=" json:"DisplayIcon,omitempty"`
	// * 可镶嵌的孔位ID
	StarHole *uint32 `protobuf:"varint,41,opt,def=0" json:"StarHole,omitempty"`
	// * 礼包是否可预览
	IsPreview        *uint32 `protobuf:"varint,42,opt,def=0" json:"IsPreview,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}

const Default_Item_Part string = "None"
const Default_Item_RoleOnly int32 = -1
const Default_Item_EnableLevel int32 = 0
const Default_Item_Tier int32 = 0
const Default_Item_RareLevel int32 = 0
const Default_Item_StoreNum int64 = 99999
const Default_Item_StackDrop int32 = 0
const Default_Item_FuseLevelLimit int32 = 0
const Default_Item_LootScore int32 = -1
const Default_Item_SetGear int32 = 0
const Default_Item_Attack float32 = 0
const Default_Item_Defense float32 = 0
const Default_Item_HP float32 = 0
const Default_Item_IsTDR uint32 = 0
const Default_Item_AttrValue uint32 = 0
const Default_Item_FormulaID uint32 = 0
const Default_Item_CorpLevelLimit int32 = 1
const Default_Item_TimeLimit uint32 = 99999
const Default_Item_TimeMode int32 = 0
const Default_Item_MaxTime int32 = 8760
const Default_Item_OwnMaxNum uint32 = 999999
const Default_Item_StarUpRate float32 = 0
const Default_Item_StarBless uint32 = 0
const Default_Item_JadeLevel int32 = 0
const Default_Item_Coin string = "VI_HC"
const Default_Item_CoinPrice uint32 = 0
const Default_Item_StarHole uint32 = 0
const Default_Item_IsPreview uint32 = 0

func (m *Item) GetID() string {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return ""
}

func (m *Item) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Item) GetPart() string {
	if m != nil && m.Part != nil {
		return *m.Part
	}
	return Default_Item_Part
}

func (m *Item) GetRoleOnly() int32 {
	if m != nil && m.RoleOnly != nil {
		return *m.RoleOnly
	}
	return Default_Item_RoleOnly
}

func (m *Item) GetEnableLevel() int32 {
	if m != nil && m.EnableLevel != nil {
		return *m.EnableLevel
	}
	return Default_Item_EnableLevel
}

func (m *Item) GetTier() int32 {
	if m != nil && m.Tier != nil {
		return *m.Tier
	}
	return Default_Item_Tier
}

func (m *Item) GetRareLevel() int32 {
	if m != nil && m.RareLevel != nil {
		return *m.RareLevel
	}
	return Default_Item_RareLevel
}

func (m *Item) GetStoreNum() int64 {
	if m != nil && m.StoreNum != nil {
		return *m.StoreNum
	}
	return Default_Item_StoreNum
}

func (m *Item) GetStackDrop() int32 {
	if m != nil && m.StackDrop != nil {
		return *m.StackDrop
	}
	return Default_Item_StackDrop
}

func (m *Item) GetFuseLevelLimit() int32 {
	if m != nil && m.FuseLevelLimit != nil {
		return *m.FuseLevelLimit
	}
	return Default_Item_FuseLevelLimit
}

func (m *Item) GetLootScore() int32 {
	if m != nil && m.LootScore != nil {
		return *m.LootScore
	}
	return Default_Item_LootScore
}

func (m *Item) GetSetGear() int32 {
	if m != nil && m.SetGear != nil {
		return *m.SetGear
	}
	return Default_Item_SetGear
}

func (m *Item) GetNameIDS() string {
	if m != nil && m.NameIDS != nil {
		return *m.NameIDS
	}
	return ""
}

func (m *Item) GetDescriptionIDS() string {
	if m != nil && m.DescriptionIDS != nil {
		return *m.DescriptionIDS
	}
	return ""
}

func (m *Item) GetIcon() string {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return ""
}

func (m *Item) GetInstance() string {
	if m != nil && m.Instance != nil {
		return *m.Instance
	}
	return ""
}

func (m *Item) GetAttack() float32 {
	if m != nil && m.Attack != nil {
		return *m.Attack
	}
	return Default_Item_Attack
}

func (m *Item) GetDefense() float32 {
	if m != nil && m.Defense != nil {
		return *m.Defense
	}
	return Default_Item_Defense
}

func (m *Item) GetHP() float32 {
	if m != nil && m.HP != nil {
		return *m.HP
	}
	return Default_Item_HP
}

func (m *Item) GetTrickRuleID() string {
	if m != nil && m.TrickRuleID != nil {
		return *m.TrickRuleID
	}
	return ""
}

func (m *Item) GetIsTDR() uint32 {
	if m != nil && m.IsTDR != nil {
		return *m.IsTDR
	}
	return Default_Item_IsTDR
}

func (m *Item) GetAttrType() string {
	if m != nil && m.AttrType != nil {
		return *m.AttrType
	}
	return ""
}

func (m *Item) GetAttrValue() uint32 {
	if m != nil && m.AttrValue != nil {
		return *m.AttrValue
	}
	return Default_Item_AttrValue
}

func (m *Item) GetBuffID() string {
	if m != nil && m.BuffID != nil {
		return *m.BuffID
	}
	return ""
}

func (m *Item) GetFormulaID() uint32 {
	if m != nil && m.FormulaID != nil {
		return *m.FormulaID
	}
	return Default_Item_FormulaID
}

func (m *Item) GetDropKingdom() string {
	if m != nil && m.DropKingdom != nil {
		return *m.DropKingdom
	}
	return ""
}

func (m *Item) GetDropPage() string {
	if m != nil && m.DropPage != nil {
		return *m.DropPage
	}
	return ""
}

func (m *Item) GetCorpLevelLimit() int32 {
	if m != nil && m.CorpLevelLimit != nil {
		return *m.CorpLevelLimit
	}
	return Default_Item_CorpLevelLimit
}

func (m *Item) GetTimeLimit() uint32 {
	if m != nil && m.TimeLimit != nil {
		return *m.TimeLimit
	}
	return Default_Item_TimeLimit
}

func (m *Item) GetTimeMode() int32 {
	if m != nil && m.TimeMode != nil {
		return *m.TimeMode
	}
	return Default_Item_TimeMode
}

func (m *Item) GetMaxTime() int32 {
	if m != nil && m.MaxTime != nil {
		return *m.MaxTime
	}
	return Default_Item_MaxTime
}

func (m *Item) GetRankLimit() string {
	if m != nil && m.RankLimit != nil {
		return *m.RankLimit
	}
	return ""
}

func (m *Item) GetOwnMaxNum() uint32 {
	if m != nil && m.OwnMaxNum != nil {
		return *m.OwnMaxNum
	}
	return Default_Item_OwnMaxNum
}

func (m *Item) GetStarUpRate() float32 {
	if m != nil && m.StarUpRate != nil {
		return *m.StarUpRate
	}
	return Default_Item_StarUpRate
}

func (m *Item) GetStarBless() uint32 {
	if m != nil && m.StarBless != nil {
		return *m.StarBless
	}
	return Default_Item_StarBless
}

func (m *Item) GetJadeLevel() int32 {
	if m != nil && m.JadeLevel != nil {
		return *m.JadeLevel
	}
	return Default_Item_JadeLevel
}

func (m *Item) GetCoin() string {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return Default_Item_Coin
}

func (m *Item) GetCoinPrice() uint32 {
	if m != nil && m.CoinPrice != nil {
		return *m.CoinPrice
	}
	return Default_Item_CoinPrice
}

func (m *Item) GetDropDescription() string {
	if m != nil && m.DropDescription != nil {
		return *m.DropDescription
	}
	return ""
}

func (m *Item) GetDisplayIcon() string {
	if m != nil && m.DisplayIcon != nil {
		return *m.DisplayIcon
	}
	return ""
}

func (m *Item) GetStarHole() uint32 {
	if m != nil && m.StarHole != nil {
		return *m.StarHole
	}
	return Default_Item_StarHole
}

func (m *Item) GetIsPreview() uint32 {
	if m != nil && m.IsPreview != nil {
		return *m.IsPreview
	}
	return Default_Item_IsPreview
}

type Item_ARRAY struct {
	Items            []*Item `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Item_ARRAY) Reset()         { *m = Item_ARRAY{} }
func (m *Item_ARRAY) String() string { return proto.CompactTextString(m) }
func (*Item_ARRAY) ProtoMessage()    {}

func (m *Item_ARRAY) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

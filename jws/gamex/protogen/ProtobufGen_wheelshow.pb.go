// Code generated by protoc-gen-go.
// source: ProtobufGen_wheelshow.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type WHEELSHOW struct {
	// * 活动ID
	ActivityID       *uint32                    `protobuf:"varint,1,opt,def=0" json:"ActivityID,omitempty"`
	Item_Table       []*WHEELSHOW_ItemCondition `protobuf:"bytes,2,rep" json:"Item_Table,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *WHEELSHOW) Reset()         { *m = WHEELSHOW{} }
func (m *WHEELSHOW) String() string { return proto.CompactTextString(m) }
func (*WHEELSHOW) ProtoMessage()    {}

const Default_WHEELSHOW_ActivityID uint32 = 0

func (m *WHEELSHOW) GetActivityID() uint32 {
	if m != nil && m.ActivityID != nil {
		return *m.ActivityID
	}
	return Default_WHEELSHOW_ActivityID
}

func (m *WHEELSHOW) GetItem_Table() []*WHEELSHOW_ItemCondition {
	if m != nil {
		return m.Item_Table
	}
	return nil
}

type WHEELSHOW_ItemCondition struct {
	// * 物品ID
	ItemID *string `protobuf:"bytes,1,opt,def=" json:"ItemID,omitempty"`
	// * 物品数量
	ItemCount *uint32 `protobuf:"varint,2,opt,def=0" json:"ItemCount,omitempty"`
	// * 是否流光
	Special          *uint32 `protobuf:"varint,3,opt,def=0" json:"Special,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WHEELSHOW_ItemCondition) Reset()         { *m = WHEELSHOW_ItemCondition{} }
func (m *WHEELSHOW_ItemCondition) String() string { return proto.CompactTextString(m) }
func (*WHEELSHOW_ItemCondition) ProtoMessage()    {}

const Default_WHEELSHOW_ItemCondition_ItemCount uint32 = 0
const Default_WHEELSHOW_ItemCondition_Special uint32 = 0

func (m *WHEELSHOW_ItemCondition) GetItemID() string {
	if m != nil && m.ItemID != nil {
		return *m.ItemID
	}
	return ""
}

func (m *WHEELSHOW_ItemCondition) GetItemCount() uint32 {
	if m != nil && m.ItemCount != nil {
		return *m.ItemCount
	}
	return Default_WHEELSHOW_ItemCondition_ItemCount
}

func (m *WHEELSHOW_ItemCondition) GetSpecial() uint32 {
	if m != nil && m.Special != nil {
		return *m.Special
	}
	return Default_WHEELSHOW_ItemCondition_Special
}

type WHEELSHOW_ARRAY struct {
	Items            []*WHEELSHOW `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *WHEELSHOW_ARRAY) Reset()         { *m = WHEELSHOW_ARRAY{} }
func (m *WHEELSHOW_ARRAY) String() string { return proto.CompactTextString(m) }
func (*WHEELSHOW_ARRAY) ProtoMessage()    {}

func (m *WHEELSHOW_ARRAY) GetItems() []*WHEELSHOW {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

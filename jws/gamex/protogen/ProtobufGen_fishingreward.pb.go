// Code generated by protoc-gen-go.
// source: ProtobufGen_fishingreward.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type FISHINGREWARD struct {
	// * 奖励编号
	RewardID *uint32 `protobuf:"varint,1,req,def=0" json:"RewardID,omitempty"`
	// * 掉落组1编号
	LootDataID *string `protobuf:"bytes,2,opt,def=" json:"LootDataID,omitempty"`
	// * 掉落组1数量
	LootDataAmount *uint32 `protobuf:"varint,3,opt,def=0" json:"LootDataAmount,omitempty"`
	// * 掉落组2编号
	LootData2ID *string `protobuf:"bytes,4,opt,def=" json:"LootData2ID,omitempty"`
	// * 掉落组2数量
	LootData2Amount *uint32 `protobuf:"varint,5,opt,def=0" json:"LootData2Amount,omitempty"`
	// * 物品编号
	ItemID *string `protobuf:"bytes,6,opt,def=" json:"ItemID,omitempty"`
	// * 奖励数量
	Amount *uint32 `protobuf:"varint,7,opt,def=0" json:"Amount,omitempty"`
	// * 剩余数量
	Limit *uint32 `protobuf:"varint,8,opt,def=0" json:"Limit,omitempty"`
	// * 展示用物品编号
	ShowItemID *string `protobuf:"bytes,9,opt,def=" json:"ShowItemID,omitempty"`
	// * 奖励信息
	TipsIDS *string `protobuf:"bytes,10,opt,def=" json:"TipsIDS,omitempty"`
	// * 跑马灯类型
	ServerMsgID *uint32 `protobuf:"varint,11,opt,def=0" json:"ServerMsgID,omitempty"`
	// * log记录的IDS
	LogIDS           *string `protobuf:"bytes,12,opt,name=logIDS,def=" json:"logIDS,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FISHINGREWARD) Reset()         { *m = FISHINGREWARD{} }
func (m *FISHINGREWARD) String() string { return proto.CompactTextString(m) }
func (*FISHINGREWARD) ProtoMessage()    {}

const Default_FISHINGREWARD_RewardID uint32 = 0
const Default_FISHINGREWARD_LootDataAmount uint32 = 0
const Default_FISHINGREWARD_LootData2Amount uint32 = 0
const Default_FISHINGREWARD_Amount uint32 = 0
const Default_FISHINGREWARD_Limit uint32 = 0
const Default_FISHINGREWARD_ServerMsgID uint32 = 0

func (m *FISHINGREWARD) GetRewardID() uint32 {
	if m != nil && m.RewardID != nil {
		return *m.RewardID
	}
	return Default_FISHINGREWARD_RewardID
}

func (m *FISHINGREWARD) GetLootDataID() string {
	if m != nil && m.LootDataID != nil {
		return *m.LootDataID
	}
	return ""
}

func (m *FISHINGREWARD) GetLootDataAmount() uint32 {
	if m != nil && m.LootDataAmount != nil {
		return *m.LootDataAmount
	}
	return Default_FISHINGREWARD_LootDataAmount
}

func (m *FISHINGREWARD) GetLootData2ID() string {
	if m != nil && m.LootData2ID != nil {
		return *m.LootData2ID
	}
	return ""
}

func (m *FISHINGREWARD) GetLootData2Amount() uint32 {
	if m != nil && m.LootData2Amount != nil {
		return *m.LootData2Amount
	}
	return Default_FISHINGREWARD_LootData2Amount
}

func (m *FISHINGREWARD) GetItemID() string {
	if m != nil && m.ItemID != nil {
		return *m.ItemID
	}
	return ""
}

func (m *FISHINGREWARD) GetAmount() uint32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return Default_FISHINGREWARD_Amount
}

func (m *FISHINGREWARD) GetLimit() uint32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return Default_FISHINGREWARD_Limit
}

func (m *FISHINGREWARD) GetShowItemID() string {
	if m != nil && m.ShowItemID != nil {
		return *m.ShowItemID
	}
	return ""
}

func (m *FISHINGREWARD) GetTipsIDS() string {
	if m != nil && m.TipsIDS != nil {
		return *m.TipsIDS
	}
	return ""
}

func (m *FISHINGREWARD) GetServerMsgID() uint32 {
	if m != nil && m.ServerMsgID != nil {
		return *m.ServerMsgID
	}
	return Default_FISHINGREWARD_ServerMsgID
}

func (m *FISHINGREWARD) GetLogIDS() string {
	if m != nil && m.LogIDS != nil {
		return *m.LogIDS
	}
	return ""
}

type FISHINGREWARD_ARRAY struct {
	Items            []*FISHINGREWARD `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *FISHINGREWARD_ARRAY) Reset()         { *m = FISHINGREWARD_ARRAY{} }
func (m *FISHINGREWARD_ARRAY) String() string { return proto.CompactTextString(m) }
func (*FISHINGREWARD_ARRAY) ProtoMessage()    {}

func (m *FISHINGREWARD_ARRAY) GetItems() []*FISHINGREWARD {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

// Code generated by protoc-gen-go.
// source: ProtobufGen_sclshare.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type SCLSHARE struct {
	// * 分享类型
	ShareType *uint32 `protobuf:"varint,1,req,def=0" json:"ShareType,omitempty"`
	// * 每日第几次拿奖
	ShareCount       *uint32           `protobuf:"varint,4,opt,def=0" json:"ShareCount,omitempty"`
	Fixed_Loot       []*SCLSHARE_Loot1 `protobuf:"bytes,3,rep" json:"Fixed_Loot,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SCLSHARE) Reset()         { *m = SCLSHARE{} }
func (m *SCLSHARE) String() string { return proto.CompactTextString(m) }
func (*SCLSHARE) ProtoMessage()    {}

const Default_SCLSHARE_ShareType uint32 = 0
const Default_SCLSHARE_ShareCount uint32 = 0

func (m *SCLSHARE) GetShareType() uint32 {
	if m != nil && m.ShareType != nil {
		return *m.ShareType
	}
	return Default_SCLSHARE_ShareType
}

func (m *SCLSHARE) GetShareCount() uint32 {
	if m != nil && m.ShareCount != nil {
		return *m.ShareCount
	}
	return Default_SCLSHARE_ShareCount
}

func (m *SCLSHARE) GetFixed_Loot() []*SCLSHARE_Loot1 {
	if m != nil {
		return m.Fixed_Loot
	}
	return nil
}

type SCLSHARE_Loot1 struct {
	// * 奖励类型
	FixedLootID *string `protobuf:"bytes,1,opt,def=" json:"FixedLootID,omitempty"`
	// * 奖励数量
	FixedLootNumber  *uint32 `protobuf:"varint,2,opt,def=0" json:"FixedLootNumber,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SCLSHARE_Loot1) Reset()         { *m = SCLSHARE_Loot1{} }
func (m *SCLSHARE_Loot1) String() string { return proto.CompactTextString(m) }
func (*SCLSHARE_Loot1) ProtoMessage()    {}

const Default_SCLSHARE_Loot1_FixedLootNumber uint32 = 0

func (m *SCLSHARE_Loot1) GetFixedLootID() string {
	if m != nil && m.FixedLootID != nil {
		return *m.FixedLootID
	}
	return ""
}

func (m *SCLSHARE_Loot1) GetFixedLootNumber() uint32 {
	if m != nil && m.FixedLootNumber != nil {
		return *m.FixedLootNumber
	}
	return Default_SCLSHARE_Loot1_FixedLootNumber
}

type SCLSHARE_ARRAY struct {
	Items            []*SCLSHARE `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SCLSHARE_ARRAY) Reset()         { *m = SCLSHARE_ARRAY{} }
func (m *SCLSHARE_ARRAY) String() string { return proto.CompactTextString(m) }
func (*SCLSHARE_ARRAY) ProtoMessage()    {}

func (m *SCLSHARE_ARRAY) GetItems() []*SCLSHARE {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

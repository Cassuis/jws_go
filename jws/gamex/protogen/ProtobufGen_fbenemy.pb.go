// Code generated by protoc-gen-go.
// source: ProtobufGen_fbenemy.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type FBENEMY struct {
	// * 节日类型ID
	ActivityID *uint32 `protobuf:"varint,1,req,def=0" json:"ActivityID,omitempty"`
	// * 敌兵的ID
	BossID *string `protobuf:"bytes,2,opt,def=" json:"BossID,omitempty"`
	// * 敌兵的模型
	CharacterID *string `protobuf:"bytes,3,opt,def=" json:"CharacterID,omitempty"`
	// * 敌兵的类型
	Type *string `protobuf:"bytes,4,opt,def=" json:"Type,omitempty"`
	// * 克制ID
	Idid *string `protobuf:"bytes,5,opt,def=" json:"Idid,omitempty"`
	// * 敌兵的名字
	NameIDs *string `protobuf:"bytes,6,opt,def=" json:"NameIDs,omitempty"`
	// *
	StageIDs *string `protobuf:"bytes,7,opt,def=" json:"StageIDs,omitempty"`
	// *
	Faction *string `protobuf:"bytes,8,opt,def=" json:"Faction,omitempty"`
	// *
	IsPlayer *uint32 `protobuf:"varint,9,opt,def=0" json:"IsPlayer,omitempty"`
	// *
	Speed *uint32 `protobuf:"varint,10,opt,def=0" json:"Speed,omitempty"`
	// *
	AngleSpeed *uint32 `protobuf:"varint,11,opt,def=0" json:"AngleSpeed,omitempty"`
	// * 生命系数
	HitPointCoefficient *float32 `protobuf:"fixed32,12,opt,def=0" json:"HitPointCoefficient,omitempty"`
	// * 血条数
	HPSectionNum *uint32 `protobuf:"varint,13,opt,def=1" json:"HPSectionNum,omitempty"`
	// * 护甲下限
	ThresholdMin *uint32 `protobuf:"varint,14,opt,def=0" json:"ThresholdMin,omitempty"`
	// * 护甲上限
	ThresholdMax *uint32 `protobuf:"varint,15,opt,def=0" json:"ThresholdMax,omitempty"`
	// * 护盾系数
	ThresholdRatio *uint32 `protobuf:"varint,16,opt,def=0" json:"ThresholdRatio,omitempty"`
	// *
	Guard *uint32 `protobuf:"varint,17,opt,def=0" json:"Guard,omitempty"`
	// * 护盾吸收率
	ShieldAbsorbRate *float32 `protobuf:"fixed32,18,opt,def=0" json:"ShieldAbsorbRate,omitempty"`
	// * 攻击系数
	PhysicalDamageCoefficient *float32 `protobuf:"fixed32,19,opt,def=0" json:"PhysicalDamageCoefficient,omitempty"`
	// * 防御系数
	PhysicalResistCoefficient *float32 `protobuf:"fixed32,20,opt,def=0" json:"PhysicalResistCoefficient,omitempty"`
	// *
	CritRate *float32 `protobuf:"fixed32,21,opt,def=0" json:"CritRate,omitempty"`
	// *
	CritDamage *float32 `protobuf:"fixed32,22,opt,def=0" json:"CritDamage,omitempty"`
	// * 无法被黑洞牵引
	CantbeBlackHole *uint32 `protobuf:"varint,23,opt,def=0" json:"CantbeBlackHole,omitempty"`
	// * 无法被击飞、挑起等特殊效果作用
	CantbeSpecialHit *uint32 `protobuf:"varint,24,opt,def=0" json:"CantbeSpecialHit,omitempty"`
	// * 无法被冰冻效果作用
	CantbeFrozen *uint32             `protobuf:"varint,29,opt,def=0" json:"CantbeFrozen,omitempty"`
	Loots        []*FBENEMY_LootRule `protobuf:"bytes,25,rep" json:"Loots,omitempty"`
	// *
	Equip1 *string `protobuf:"bytes,26,opt,def=" json:"Equip1,omitempty"`
	// *
	Equip2 *string `protobuf:"bytes,27,opt,def=" json:"Equip2,omitempty"`
	// * 光环BuffIDs
	Aura             *string `protobuf:"bytes,28,opt,def=" json:"Aura,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FBENEMY) Reset()         { *m = FBENEMY{} }
func (m *FBENEMY) String() string { return proto.CompactTextString(m) }
func (*FBENEMY) ProtoMessage()    {}

const Default_FBENEMY_ActivityID uint32 = 0
const Default_FBENEMY_IsPlayer uint32 = 0
const Default_FBENEMY_Speed uint32 = 0
const Default_FBENEMY_AngleSpeed uint32 = 0
const Default_FBENEMY_HitPointCoefficient float32 = 0
const Default_FBENEMY_HPSectionNum uint32 = 1
const Default_FBENEMY_ThresholdMin uint32 = 0
const Default_FBENEMY_ThresholdMax uint32 = 0
const Default_FBENEMY_ThresholdRatio uint32 = 0
const Default_FBENEMY_Guard uint32 = 0
const Default_FBENEMY_ShieldAbsorbRate float32 = 0
const Default_FBENEMY_PhysicalDamageCoefficient float32 = 0
const Default_FBENEMY_PhysicalResistCoefficient float32 = 0
const Default_FBENEMY_CritRate float32 = 0
const Default_FBENEMY_CritDamage float32 = 0
const Default_FBENEMY_CantbeBlackHole uint32 = 0
const Default_FBENEMY_CantbeSpecialHit uint32 = 0
const Default_FBENEMY_CantbeFrozen uint32 = 0

func (m *FBENEMY) GetActivityID() uint32 {
	if m != nil && m.ActivityID != nil {
		return *m.ActivityID
	}
	return Default_FBENEMY_ActivityID
}

func (m *FBENEMY) GetBossID() string {
	if m != nil && m.BossID != nil {
		return *m.BossID
	}
	return ""
}

func (m *FBENEMY) GetCharacterID() string {
	if m != nil && m.CharacterID != nil {
		return *m.CharacterID
	}
	return ""
}

func (m *FBENEMY) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *FBENEMY) GetIdid() string {
	if m != nil && m.Idid != nil {
		return *m.Idid
	}
	return ""
}

func (m *FBENEMY) GetNameIDs() string {
	if m != nil && m.NameIDs != nil {
		return *m.NameIDs
	}
	return ""
}

func (m *FBENEMY) GetStageIDs() string {
	if m != nil && m.StageIDs != nil {
		return *m.StageIDs
	}
	return ""
}

func (m *FBENEMY) GetFaction() string {
	if m != nil && m.Faction != nil {
		return *m.Faction
	}
	return ""
}

func (m *FBENEMY) GetIsPlayer() uint32 {
	if m != nil && m.IsPlayer != nil {
		return *m.IsPlayer
	}
	return Default_FBENEMY_IsPlayer
}

func (m *FBENEMY) GetSpeed() uint32 {
	if m != nil && m.Speed != nil {
		return *m.Speed
	}
	return Default_FBENEMY_Speed
}

func (m *FBENEMY) GetAngleSpeed() uint32 {
	if m != nil && m.AngleSpeed != nil {
		return *m.AngleSpeed
	}
	return Default_FBENEMY_AngleSpeed
}

func (m *FBENEMY) GetHitPointCoefficient() float32 {
	if m != nil && m.HitPointCoefficient != nil {
		return *m.HitPointCoefficient
	}
	return Default_FBENEMY_HitPointCoefficient
}

func (m *FBENEMY) GetHPSectionNum() uint32 {
	if m != nil && m.HPSectionNum != nil {
		return *m.HPSectionNum
	}
	return Default_FBENEMY_HPSectionNum
}

func (m *FBENEMY) GetThresholdMin() uint32 {
	if m != nil && m.ThresholdMin != nil {
		return *m.ThresholdMin
	}
	return Default_FBENEMY_ThresholdMin
}

func (m *FBENEMY) GetThresholdMax() uint32 {
	if m != nil && m.ThresholdMax != nil {
		return *m.ThresholdMax
	}
	return Default_FBENEMY_ThresholdMax
}

func (m *FBENEMY) GetThresholdRatio() uint32 {
	if m != nil && m.ThresholdRatio != nil {
		return *m.ThresholdRatio
	}
	return Default_FBENEMY_ThresholdRatio
}

func (m *FBENEMY) GetGuard() uint32 {
	if m != nil && m.Guard != nil {
		return *m.Guard
	}
	return Default_FBENEMY_Guard
}

func (m *FBENEMY) GetShieldAbsorbRate() float32 {
	if m != nil && m.ShieldAbsorbRate != nil {
		return *m.ShieldAbsorbRate
	}
	return Default_FBENEMY_ShieldAbsorbRate
}

func (m *FBENEMY) GetPhysicalDamageCoefficient() float32 {
	if m != nil && m.PhysicalDamageCoefficient != nil {
		return *m.PhysicalDamageCoefficient
	}
	return Default_FBENEMY_PhysicalDamageCoefficient
}

func (m *FBENEMY) GetPhysicalResistCoefficient() float32 {
	if m != nil && m.PhysicalResistCoefficient != nil {
		return *m.PhysicalResistCoefficient
	}
	return Default_FBENEMY_PhysicalResistCoefficient
}

func (m *FBENEMY) GetCritRate() float32 {
	if m != nil && m.CritRate != nil {
		return *m.CritRate
	}
	return Default_FBENEMY_CritRate
}

func (m *FBENEMY) GetCritDamage() float32 {
	if m != nil && m.CritDamage != nil {
		return *m.CritDamage
	}
	return Default_FBENEMY_CritDamage
}

func (m *FBENEMY) GetCantbeBlackHole() uint32 {
	if m != nil && m.CantbeBlackHole != nil {
		return *m.CantbeBlackHole
	}
	return Default_FBENEMY_CantbeBlackHole
}

func (m *FBENEMY) GetCantbeSpecialHit() uint32 {
	if m != nil && m.CantbeSpecialHit != nil {
		return *m.CantbeSpecialHit
	}
	return Default_FBENEMY_CantbeSpecialHit
}

func (m *FBENEMY) GetCantbeFrozen() uint32 {
	if m != nil && m.CantbeFrozen != nil {
		return *m.CantbeFrozen
	}
	return Default_FBENEMY_CantbeFrozen
}

func (m *FBENEMY) GetLoots() []*FBENEMY_LootRule {
	if m != nil {
		return m.Loots
	}
	return nil
}

func (m *FBENEMY) GetEquip1() string {
	if m != nil && m.Equip1 != nil {
		return *m.Equip1
	}
	return ""
}

func (m *FBENEMY) GetEquip2() string {
	if m != nil && m.Equip2 != nil {
		return *m.Equip2
	}
	return ""
}

func (m *FBENEMY) GetAura() string {
	if m != nil && m.Aura != nil {
		return *m.Aura
	}
	return ""
}

type FBENEMY_LootRule struct {
	// *
	LootTemplate *string `protobuf:"bytes,1,opt,def=" json:"LootTemplate,omitempty"`
	// *
	LootTimes        *uint32 `protobuf:"varint,2,opt,def=0" json:"LootTimes,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FBENEMY_LootRule) Reset()         { *m = FBENEMY_LootRule{} }
func (m *FBENEMY_LootRule) String() string { return proto.CompactTextString(m) }
func (*FBENEMY_LootRule) ProtoMessage()    {}

const Default_FBENEMY_LootRule_LootTimes uint32 = 0

func (m *FBENEMY_LootRule) GetLootTemplate() string {
	if m != nil && m.LootTemplate != nil {
		return *m.LootTemplate
	}
	return ""
}

func (m *FBENEMY_LootRule) GetLootTimes() uint32 {
	if m != nil && m.LootTimes != nil {
		return *m.LootTimes
	}
	return Default_FBENEMY_LootRule_LootTimes
}

type FBENEMY_ARRAY struct {
	Items            []*FBENEMY `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *FBENEMY_ARRAY) Reset()         { *m = FBENEMY_ARRAY{} }
func (m *FBENEMY_ARRAY) String() string { return proto.CompactTextString(m) }
func (*FBENEMY_ARRAY) ProtoMessage()    {}

func (m *FBENEMY_ARRAY) GetItems() []*FBENEMY {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

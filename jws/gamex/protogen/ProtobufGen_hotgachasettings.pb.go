// Code generated by protoc-gen-go.
// source: ProtobufGen_hotgachasettings.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type HOTGACHASETTINGS struct {
	// * 活动ID
	ActivityID *uint32 `protobuf:"varint,1,opt,def=0" json:"ActivityID,omitempty"`
	// * 货币道具ID
	GachaCoin1 *string `protobuf:"bytes,15,opt,def=" json:"GachaCoin1,omitempty"`
	// * 单次的价格
	APrice1 *uint32 `protobuf:"varint,16,opt,def=0" json:"APrice1,omitempty"`
	// * 10次的价格
	TenPrice1 *uint32 `protobuf:"varint,17,opt,def=0" json:"TenPrice1,omitempty"`
	// * 免费抽奖的间隔时间（单位：分钟），更新点不清零
	FreeTime *uint32 `protobuf:"varint,6,opt,def=0" json:"FreeTime,omitempty"`
	// * 每1次抽奖，给几点祝福值
	OnceWish *uint32 `protobuf:"varint,10,opt,def=0" json:"OnceWish,omitempty"`
	// * 祝福值最大值
	WishMax *uint32 `protobuf:"varint,11,opt,def=0" json:"WishMax,omitempty"`
	// * 常规组ID
	ItemGroupID *uint32 `protobuf:"varint,12,opt,def=0" json:"ItemGroupID,omitempty"`
	// * 终极大奖道具ID
	FinalRewardID *string `protobuf:"bytes,13,opt,def=" json:"FinalRewardID,omitempty"`
	// * 终极大奖数量
	FinalRewardNum *uint32 `protobuf:"varint,14,opt,def=0" json:"FinalRewardNum,omitempty"`
	// * 货币道具ID
	GachaCoin2 *string `protobuf:"bytes,18,opt,def=" json:"GachaCoin2,omitempty"`
	// * 单次消耗数量
	APrice2 *uint32 `protobuf:"varint,19,opt,def=0" json:"APrice2,omitempty"`
	// * 10次消耗数量
	TenPrice2 *uint32 `protobuf:"varint,20,opt,def=0" json:"TenPrice2,omitempty"`
	// * 用来展示的道具，包装为购买该赠送抽奖机会
	GachaShowItem *string `protobuf:"bytes,21,opt,def=" json:"GachaShowItem,omitempty"`
	// * 展示道具数量
	GachaShowCount   *uint32 `protobuf:"varint,22,opt,def=0" json:"GachaShowCount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HOTGACHASETTINGS) Reset()         { *m = HOTGACHASETTINGS{} }
func (m *HOTGACHASETTINGS) String() string { return proto.CompactTextString(m) }
func (*HOTGACHASETTINGS) ProtoMessage()    {}

const Default_HOTGACHASETTINGS_ActivityID uint32 = 0
const Default_HOTGACHASETTINGS_APrice1 uint32 = 0
const Default_HOTGACHASETTINGS_TenPrice1 uint32 = 0
const Default_HOTGACHASETTINGS_FreeTime uint32 = 0
const Default_HOTGACHASETTINGS_OnceWish uint32 = 0
const Default_HOTGACHASETTINGS_WishMax uint32 = 0
const Default_HOTGACHASETTINGS_ItemGroupID uint32 = 0
const Default_HOTGACHASETTINGS_FinalRewardNum uint32 = 0
const Default_HOTGACHASETTINGS_APrice2 uint32 = 0
const Default_HOTGACHASETTINGS_TenPrice2 uint32 = 0
const Default_HOTGACHASETTINGS_GachaShowCount uint32 = 0

func (m *HOTGACHASETTINGS) GetActivityID() uint32 {
	if m != nil && m.ActivityID != nil {
		return *m.ActivityID
	}
	return Default_HOTGACHASETTINGS_ActivityID
}

func (m *HOTGACHASETTINGS) GetGachaCoin1() string {
	if m != nil && m.GachaCoin1 != nil {
		return *m.GachaCoin1
	}
	return ""
}

func (m *HOTGACHASETTINGS) GetAPrice1() uint32 {
	if m != nil && m.APrice1 != nil {
		return *m.APrice1
	}
	return Default_HOTGACHASETTINGS_APrice1
}

func (m *HOTGACHASETTINGS) GetTenPrice1() uint32 {
	if m != nil && m.TenPrice1 != nil {
		return *m.TenPrice1
	}
	return Default_HOTGACHASETTINGS_TenPrice1
}

func (m *HOTGACHASETTINGS) GetFreeTime() uint32 {
	if m != nil && m.FreeTime != nil {
		return *m.FreeTime
	}
	return Default_HOTGACHASETTINGS_FreeTime
}

func (m *HOTGACHASETTINGS) GetOnceWish() uint32 {
	if m != nil && m.OnceWish != nil {
		return *m.OnceWish
	}
	return Default_HOTGACHASETTINGS_OnceWish
}

func (m *HOTGACHASETTINGS) GetWishMax() uint32 {
	if m != nil && m.WishMax != nil {
		return *m.WishMax
	}
	return Default_HOTGACHASETTINGS_WishMax
}

func (m *HOTGACHASETTINGS) GetItemGroupID() uint32 {
	if m != nil && m.ItemGroupID != nil {
		return *m.ItemGroupID
	}
	return Default_HOTGACHASETTINGS_ItemGroupID
}

func (m *HOTGACHASETTINGS) GetFinalRewardID() string {
	if m != nil && m.FinalRewardID != nil {
		return *m.FinalRewardID
	}
	return ""
}

func (m *HOTGACHASETTINGS) GetFinalRewardNum() uint32 {
	if m != nil && m.FinalRewardNum != nil {
		return *m.FinalRewardNum
	}
	return Default_HOTGACHASETTINGS_FinalRewardNum
}

func (m *HOTGACHASETTINGS) GetGachaCoin2() string {
	if m != nil && m.GachaCoin2 != nil {
		return *m.GachaCoin2
	}
	return ""
}

func (m *HOTGACHASETTINGS) GetAPrice2() uint32 {
	if m != nil && m.APrice2 != nil {
		return *m.APrice2
	}
	return Default_HOTGACHASETTINGS_APrice2
}

func (m *HOTGACHASETTINGS) GetTenPrice2() uint32 {
	if m != nil && m.TenPrice2 != nil {
		return *m.TenPrice2
	}
	return Default_HOTGACHASETTINGS_TenPrice2
}

func (m *HOTGACHASETTINGS) GetGachaShowItem() string {
	if m != nil && m.GachaShowItem != nil {
		return *m.GachaShowItem
	}
	return ""
}

func (m *HOTGACHASETTINGS) GetGachaShowCount() uint32 {
	if m != nil && m.GachaShowCount != nil {
		return *m.GachaShowCount
	}
	return Default_HOTGACHASETTINGS_GachaShowCount
}

type HOTGACHASETTINGS_ARRAY struct {
	Items            []*HOTGACHASETTINGS `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *HOTGACHASETTINGS_ARRAY) Reset()         { *m = HOTGACHASETTINGS_ARRAY{} }
func (m *HOTGACHASETTINGS_ARRAY) String() string { return proto.CompactTextString(m) }
func (*HOTGACHASETTINGS_ARRAY) ProtoMessage()    {}

func (m *HOTGACHASETTINGS_ARRAY) GetItems() []*HOTGACHASETTINGS {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

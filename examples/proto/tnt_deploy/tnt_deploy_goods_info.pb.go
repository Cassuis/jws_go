// Code generated by protoc-gen-go.
// source: tnt_deploy_goods_info.proto
// DO NOT EDIT!

/*
Package tnt_deploy is a generated protocol buffer package.

It is generated from these files:
	tnt_deploy_goods_info.proto

It has these top-level messages:
	GOODS_INFO
	GOODS_INFO_ARRAY
*/
package tnt_deploy

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type GOODS_INFO struct {
	// * 商品ID
	GoodsId *uint32 `protobuf:"varint,1,req,name=goods_id,def=0" json:"goods_id,omitempty"`
	// * 商品名
	Name []byte `protobuf:"bytes,2,opt,name=name,def=" json:"name,omitempty"`
	// * 性别
	// 不限制：100
	// male：101
	// female：102
	Sex *uint32 `protobuf:"varint,3,opt,name=sex,def=0" json:"sex,omitempty"`
	// * 等级限制
	LevelLimit *uint32 `protobuf:"varint,4,opt,name=level_limit,def=0" json:"level_limit,omitempty"`
	// *  达人俱乐部等级限制
	// （普通商品不用配置或配置0）
	ClubVipLevel *int32 `protobuf:"varint,5,opt,name=club_vip_level,def=0" json:"club_vip_level,omitempty"`
	// *  2Q币专区
	// （普通商品不用配置或配置0）
	Qb_2        *int32  `protobuf:"varint,6,opt,name=qb_2,def=0" json:"qb_2,omitempty"`
	ConsumeType *uint32 `protobuf:"varint,7,opt,name=consume_type,def=0" json:"consume_type,omitempty"`
	// * 计时单位
	// 0 默认(天)
	// 1 分钟
	// 2 小时
	// 3 天
	// 4 月
	// 5 年
	TimeUnit *uint32 `protobuf:"varint,8,opt,name=time_unit,def=0" json:"time_unit,omitempty"`
	// * 是否商城上架显示
	// （根据需要配置上下架时间）
	// 0 否
	// 1 是
	IsOnline *uint32 `protobuf:"varint,9,opt,name=is_online,def=0" json:"is_online,omitempty"`
	// * 能否购买
	// （已上架物品必然可买，根据需要配置上下架时间）
	// 0 否
	// 1 是
	CanBuy *uint32 `protobuf:"varint,10,opt,name=can_buy,def=0" json:"can_buy,omitempty"`
	// * 可否续费
	// 0 否
	// 1 是
	CanRecharge *uint32 `protobuf:"varint,11,opt,name=can_recharge,def=0" json:"can_recharge,omitempty"`
	OnlineTime  []byte  `protobuf:"bytes,12,opt,name=online_time,def=" json:"online_time,omitempty"`
	// * 下架时间
	// (YYYY-MM-DD HH:MM:SS)
	//
	// 1.不填表示用不下架
	// 2.下架的最终确定需结合“有效时间”、“是否上架”
	OfflineTime          []byte   `protobuf:"bytes,13,opt,name=offline_time,def=" json:"offline_time,omitempty"`
	PrivilegedPlatIdList []uint32 `protobuf:"varint,14,rep,name=privileged_plat_id_list" json:"privileged_plat_id_list,omitempty"`
	// * 是否商城上架显示
	// （根据需要配置上下架时间）
	// 0 否
	// 1 是
	PrivilegedPlatIsOnline *uint32 `protobuf:"varint,15,opt,name=privileged_plat_is_online,def=0" json:"privileged_plat_is_online,omitempty"`
	// * 能否购买
	// （已上架物品必然可买，根据需要配置上下架时间）
	// 0 否
	// 1 是
	PrivilegedPlatCanBuy *uint32 `protobuf:"varint,16,opt,name=privileged_plat_can_buy,def=0" json:"privileged_plat_can_buy,omitempty"`
	// * 可否续费
	// 0 否
	// 1 是
	PrivilegedPlatCanRecharge *uint32 `protobuf:"varint,17,opt,name=privileged_plat_can_recharge,def=0" json:"privileged_plat_can_recharge,omitempty"`
	// * 支付方式
	// 0 默认不限
	// 1 只限QB
	// 2 只限点券
	PaymentTerms *uint32 `protobuf:"varint,18,opt,name=payment_terms,def=0" json:"payment_terms,omitempty"`
	// *  有效时间
	// （过期会从背包删除）
	// 需要再添加
	// 格式如下，日期和时间中间是空格，不是换行！
	// 2011-10-10 00:00:00
	ValidTime []byte `protobuf:"bytes,19,opt,name=valid_time,def=" json:"valid_time,omitempty"`
	// * 排序优先级
	//
	// 1~? 优先级递减
	// 0 最低优先级
	SortPriority *uint32 `protobuf:"varint,20,opt,name=sort_priority,def=0" json:"sort_priority,omitempty"`
	// * 配套编号
	//
	// -1 散装
	// 0 子id相同默认成套
	// 1~9999 配套编号（允许不同子id）
	SuitNumber *int32 `protobuf:"varint,21,opt,name=suit_number,def=0" json:"suit_number,omitempty"`
	// * 背包排序优先级
	//
	// 0~正数优先级递增
	//
	// 背包排序有较复杂的具体排序逻辑。本数值只用于背包中的【其他】物品的排序
	BagSortPriority *uint32 `protobuf:"varint,22,opt,name=bag_sort_priority,def=0" json:"bag_sort_priority,omitempty"`
	Status          []byte  `protobuf:"bytes,23,opt,name=status,def=" json:"status,omitempty"`
	Rank            *uint32 `protobuf:"varint,24,opt,name=rank,def=0" json:"rank,omitempty"`
	// * 折扣（1-100）
	PriceDiscount *uint32 `protobuf:"varint,25,opt,name=price_discount,def=0" json:"price_discount,omitempty"`
	// * VIP折扣（1-100）
	VipDiscount *uint32                 `protobuf:"varint,26,opt,name=vip_discount,def=0" json:"vip_discount,omitempty"`
	PriceTable  []*GOODS_INFO_Price     `protobuf:"bytes,27,rep,name=price_table" json:"price_table,omitempty"`
	GoodsAttr   []*GOODS_INFO_GoodsAttr `protobuf:"bytes,28,rep,name=goods_attr" json:"goods_attr,omitempty"`
	// * 商品详情
	Description []byte `protobuf:"bytes,29,opt,name=description,def=" json:"description,omitempty"`
	// * 商城购买的限制id
	// 详细配置在
	// limitation表
	LimitId *uint32 `protobuf:"varint,30,opt,name=limit_id,def=0" json:"limit_id,omitempty"`
	// * 使用 跳转id
	SubSystemId      []byte `protobuf:"bytes,31,opt,name=subSystemId,def=" json:"subSystemId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GOODS_INFO) Reset()         { *m = GOODS_INFO{} }
func (m *GOODS_INFO) String() string { return proto.CompactTextString(m) }
func (*GOODS_INFO) ProtoMessage()    {}

const Default_GOODS_INFO_GoodsId uint32 = 0
const Default_GOODS_INFO_Sex uint32 = 0
const Default_GOODS_INFO_LevelLimit uint32 = 0
const Default_GOODS_INFO_ClubVipLevel int32 = 0
const Default_GOODS_INFO_Qb_2 int32 = 0
const Default_GOODS_INFO_ConsumeType uint32 = 0
const Default_GOODS_INFO_TimeUnit uint32 = 0
const Default_GOODS_INFO_IsOnline uint32 = 0
const Default_GOODS_INFO_CanBuy uint32 = 0
const Default_GOODS_INFO_CanRecharge uint32 = 0
const Default_GOODS_INFO_PrivilegedPlatIsOnline uint32 = 0
const Default_GOODS_INFO_PrivilegedPlatCanBuy uint32 = 0
const Default_GOODS_INFO_PrivilegedPlatCanRecharge uint32 = 0
const Default_GOODS_INFO_PaymentTerms uint32 = 0
const Default_GOODS_INFO_SortPriority uint32 = 0
const Default_GOODS_INFO_SuitNumber int32 = 0
const Default_GOODS_INFO_BagSortPriority uint32 = 0
const Default_GOODS_INFO_Rank uint32 = 0
const Default_GOODS_INFO_PriceDiscount uint32 = 0
const Default_GOODS_INFO_VipDiscount uint32 = 0
const Default_GOODS_INFO_LimitId uint32 = 0

func (m *GOODS_INFO) GetGoodsId() uint32 {
	if m != nil && m.GoodsId != nil {
		return *m.GoodsId
	}
	return Default_GOODS_INFO_GoodsId
}

func (m *GOODS_INFO) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *GOODS_INFO) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return Default_GOODS_INFO_Sex
}

func (m *GOODS_INFO) GetLevelLimit() uint32 {
	if m != nil && m.LevelLimit != nil {
		return *m.LevelLimit
	}
	return Default_GOODS_INFO_LevelLimit
}

func (m *GOODS_INFO) GetClubVipLevel() int32 {
	if m != nil && m.ClubVipLevel != nil {
		return *m.ClubVipLevel
	}
	return Default_GOODS_INFO_ClubVipLevel
}

func (m *GOODS_INFO) GetQb_2() int32 {
	if m != nil && m.Qb_2 != nil {
		return *m.Qb_2
	}
	return Default_GOODS_INFO_Qb_2
}

func (m *GOODS_INFO) GetConsumeType() uint32 {
	if m != nil && m.ConsumeType != nil {
		return *m.ConsumeType
	}
	return Default_GOODS_INFO_ConsumeType
}

func (m *GOODS_INFO) GetTimeUnit() uint32 {
	if m != nil && m.TimeUnit != nil {
		return *m.TimeUnit
	}
	return Default_GOODS_INFO_TimeUnit
}

func (m *GOODS_INFO) GetIsOnline() uint32 {
	if m != nil && m.IsOnline != nil {
		return *m.IsOnline
	}
	return Default_GOODS_INFO_IsOnline
}

func (m *GOODS_INFO) GetCanBuy() uint32 {
	if m != nil && m.CanBuy != nil {
		return *m.CanBuy
	}
	return Default_GOODS_INFO_CanBuy
}

func (m *GOODS_INFO) GetCanRecharge() uint32 {
	if m != nil && m.CanRecharge != nil {
		return *m.CanRecharge
	}
	return Default_GOODS_INFO_CanRecharge
}

func (m *GOODS_INFO) GetOnlineTime() []byte {
	if m != nil {
		return m.OnlineTime
	}
	return nil
}

func (m *GOODS_INFO) GetOfflineTime() []byte {
	if m != nil {
		return m.OfflineTime
	}
	return nil
}

func (m *GOODS_INFO) GetPrivilegedPlatIdList() []uint32 {
	if m != nil {
		return m.PrivilegedPlatIdList
	}
	return nil
}

func (m *GOODS_INFO) GetPrivilegedPlatIsOnline() uint32 {
	if m != nil && m.PrivilegedPlatIsOnline != nil {
		return *m.PrivilegedPlatIsOnline
	}
	return Default_GOODS_INFO_PrivilegedPlatIsOnline
}

func (m *GOODS_INFO) GetPrivilegedPlatCanBuy() uint32 {
	if m != nil && m.PrivilegedPlatCanBuy != nil {
		return *m.PrivilegedPlatCanBuy
	}
	return Default_GOODS_INFO_PrivilegedPlatCanBuy
}

func (m *GOODS_INFO) GetPrivilegedPlatCanRecharge() uint32 {
	if m != nil && m.PrivilegedPlatCanRecharge != nil {
		return *m.PrivilegedPlatCanRecharge
	}
	return Default_GOODS_INFO_PrivilegedPlatCanRecharge
}

func (m *GOODS_INFO) GetPaymentTerms() uint32 {
	if m != nil && m.PaymentTerms != nil {
		return *m.PaymentTerms
	}
	return Default_GOODS_INFO_PaymentTerms
}

func (m *GOODS_INFO) GetValidTime() []byte {
	if m != nil {
		return m.ValidTime
	}
	return nil
}

func (m *GOODS_INFO) GetSortPriority() uint32 {
	if m != nil && m.SortPriority != nil {
		return *m.SortPriority
	}
	return Default_GOODS_INFO_SortPriority
}

func (m *GOODS_INFO) GetSuitNumber() int32 {
	if m != nil && m.SuitNumber != nil {
		return *m.SuitNumber
	}
	return Default_GOODS_INFO_SuitNumber
}

func (m *GOODS_INFO) GetBagSortPriority() uint32 {
	if m != nil && m.BagSortPriority != nil {
		return *m.BagSortPriority
	}
	return Default_GOODS_INFO_BagSortPriority
}

func (m *GOODS_INFO) GetStatus() []byte {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GOODS_INFO) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return Default_GOODS_INFO_Rank
}

func (m *GOODS_INFO) GetPriceDiscount() uint32 {
	if m != nil && m.PriceDiscount != nil {
		return *m.PriceDiscount
	}
	return Default_GOODS_INFO_PriceDiscount
}

func (m *GOODS_INFO) GetVipDiscount() uint32 {
	if m != nil && m.VipDiscount != nil {
		return *m.VipDiscount
	}
	return Default_GOODS_INFO_VipDiscount
}

func (m *GOODS_INFO) GetPriceTable() []*GOODS_INFO_Price {
	if m != nil {
		return m.PriceTable
	}
	return nil
}

func (m *GOODS_INFO) GetGoodsAttr() []*GOODS_INFO_GoodsAttr {
	if m != nil {
		return m.GoodsAttr
	}
	return nil
}

func (m *GOODS_INFO) GetDescription() []byte {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *GOODS_INFO) GetLimitId() uint32 {
	if m != nil && m.LimitId != nil {
		return *m.LimitId
	}
	return Default_GOODS_INFO_LimitId
}

func (m *GOODS_INFO) GetSubSystemId() []byte {
	if m != nil {
		return m.SubSystemId
	}
	return nil
}

type GOODS_INFO_Price struct {
	// * 点券价格
	PriceDq *uint32 `protobuf:"varint,1,opt,name=price_dq,def=0" json:"price_dq,omitempty"`
	// * 金币价格
	PriceGold *uint32 `protobuf:"varint,2,opt,name=price_gold,def=0" json:"price_gold,omitempty"`
	// * 天数或数量
	PriceValue       *uint32 `protobuf:"varint,3,opt,name=price_value,def=0" json:"price_value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GOODS_INFO_Price) Reset()         { *m = GOODS_INFO_Price{} }
func (m *GOODS_INFO_Price) String() string { return proto.CompactTextString(m) }
func (*GOODS_INFO_Price) ProtoMessage()    {}

const Default_GOODS_INFO_Price_PriceDq uint32 = 0
const Default_GOODS_INFO_Price_PriceGold uint32 = 0
const Default_GOODS_INFO_Price_PriceValue uint32 = 0

func (m *GOODS_INFO_Price) GetPriceDq() uint32 {
	if m != nil && m.PriceDq != nil {
		return *m.PriceDq
	}
	return Default_GOODS_INFO_Price_PriceDq
}

func (m *GOODS_INFO_Price) GetPriceGold() uint32 {
	if m != nil && m.PriceGold != nil {
		return *m.PriceGold
	}
	return Default_GOODS_INFO_Price_PriceGold
}

func (m *GOODS_INFO_Price) GetPriceValue() uint32 {
	if m != nil && m.PriceValue != nil {
		return *m.PriceValue
	}
	return Default_GOODS_INFO_Price_PriceValue
}

type GOODS_INFO_GoodsAttr struct {
	// * 属性类型
	// 1 HP
	// 2 体力
	// 3 怒气
	// 4 攻击力
	// 5 暴击
	//
	//
	AttrType *uint32 `protobuf:"varint,1,opt,name=attr_type,def=0" json:"attr_type,omitempty"`
	// * 属性值
	// (HP
	// 头发：150
	// 上身：150
	// 下身：100
	// 表情：50
	// )
	AttrValue        *uint32 `protobuf:"varint,2,opt,name=attr_value,def=0" json:"attr_value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GOODS_INFO_GoodsAttr) Reset()         { *m = GOODS_INFO_GoodsAttr{} }
func (m *GOODS_INFO_GoodsAttr) String() string { return proto.CompactTextString(m) }
func (*GOODS_INFO_GoodsAttr) ProtoMessage()    {}

const Default_GOODS_INFO_GoodsAttr_AttrType uint32 = 0
const Default_GOODS_INFO_GoodsAttr_AttrValue uint32 = 0

func (m *GOODS_INFO_GoodsAttr) GetAttrType() uint32 {
	if m != nil && m.AttrType != nil {
		return *m.AttrType
	}
	return Default_GOODS_INFO_GoodsAttr_AttrType
}

func (m *GOODS_INFO_GoodsAttr) GetAttrValue() uint32 {
	if m != nil && m.AttrValue != nil {
		return *m.AttrValue
	}
	return Default_GOODS_INFO_GoodsAttr_AttrValue
}

type GOODS_INFO_ARRAY struct {
	Items            []*GOODS_INFO `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *GOODS_INFO_ARRAY) Reset()         { *m = GOODS_INFO_ARRAY{} }
func (m *GOODS_INFO_ARRAY) String() string { return proto.CompactTextString(m) }
func (*GOODS_INFO_ARRAY) ProtoMessage()    {}

func (m *GOODS_INFO_ARRAY) GetItems() []*GOODS_INFO {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

// Code generated by protoc-gen-go.
// source: ProtobufGen_pkconst.proto
// DO NOT EDIT!

package ProtobufGen

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type PKConst struct {
	// * 常量ID
	ConstID *string `protobuf:"bytes,1,req,def=" json:"ConstID,omitempty"`
	// * 整型值
	ValueInt *int32 `protobuf:"varint,2,opt,def=0" json:"ValueInt,omitempty"`
	// * 浮点数值
	ValueFloat *float32 `protobuf:"fixed32,3,opt,def=0" json:"ValueFloat,omitempty"`
	// * 字符串格式值
	ValueString      *string `protobuf:"bytes,4,opt,def=" json:"ValueString,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PKConst) Reset()         { *m = PKConst{} }
func (m *PKConst) String() string { return proto.CompactTextString(m) }
func (*PKConst) ProtoMessage()    {}

const Default_PKConst_ValueInt int32 = 0
const Default_PKConst_ValueFloat float32 = 0

func (m *PKConst) GetConstID() string {
	if m != nil && m.ConstID != nil {
		return *m.ConstID
	}
	return ""
}

func (m *PKConst) GetValueInt() int32 {
	if m != nil && m.ValueInt != nil {
		return *m.ValueInt
	}
	return Default_PKConst_ValueInt
}

func (m *PKConst) GetValueFloat() float32 {
	if m != nil && m.ValueFloat != nil {
		return *m.ValueFloat
	}
	return Default_PKConst_ValueFloat
}

func (m *PKConst) GetValueString() string {
	if m != nil && m.ValueString != nil {
		return *m.ValueString
	}
	return ""
}

type PKConst_ARRAY struct {
	Items            []*PKConst `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *PKConst_ARRAY) Reset()         { *m = PKConst_ARRAY{} }
func (m *PKConst_ARRAY) String() string { return proto.CompactTextString(m) }
func (*PKConst_ARRAY) ProtoMessage()    {}

func (m *PKConst_ARRAY) GetItems() []*PKConst {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
}

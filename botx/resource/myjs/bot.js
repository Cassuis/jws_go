// Generated by CoffeeScript 1.9.3
(function() {
  var BotGenerator, RandomGenerator, SimpleGenerator, submit_get;

  submit_get = function(dataString) {
    return $.ajax({
      type: "GET",
      url: "addbot",
      data: dataString,
      dataType: "json",
      success: function(data) {
        return $("#forminfo").html("<div class=\"alert alert-success\" role=\"alert\">" + "500 bot added. Everyting goes (" + data.status + ")" + "</div>").show().fadeOut(10000);
      }
    });
  };

  SimpleGenerator = React.createClass({displayName: "SimpleGenerator",
    getInitialState: function() {
      return {
        botnumber: 500,
        m: "SimpleGenerator"
      };
    },
    handleChange: function(field, e) {
      var nextState;
      nextState = {};
      nextState[field] = e.target.value;
      return this.setState(nextState);
    },
    handleSubmit: function() {
      return submit_get(this.state);
    },
    render: function() {
      return React.createElement("div", null, React.createElement("label", {
        "htmlFor": "sg-number",
        "className": "col-sm-4 control-label"
      }, "\u673a\u5668\u4eba\u603b\u6570"), React.createElement("div", {
        "className": "col-sm-8"
      }, React.createElement("input", {
        "id": "sg-number",
        "className": "form-control",
        "ref": "botnumber",
        "defaultValue": this.state.botnumber,
        "name": "number",
        "type": "number",
        "min": "1",
        "onChange": this.handleChange.bind(this, 'botnumber')
      })), React.createElement("button", {
        "type": "submit",
        "className": "btn btn-default",
        "onClick": this.handleSubmit
      }, "Submit"));
    }
  });

  RandomGenerator = React.createClass({displayName: "RandomGenerator",
    getInitialState: function() {
      return {
        botnumber: 500,
        oncenumber: 10,
        sleep: 5,
        m: "RandomGenerator"
      };
    },
    botnumberChange: function(event) {
      return this.setState({
        botnumber: event.target.value
      });
    },
    oncenumberChange: function(event) {
      return this.setState({
        oncenumber: event.target.value
      });
    },
    sleepChange: function(event) {
      return this.setState({
        sleep: event.target.value
      });
    },
    handleSubmit: function() {
      return submit_get(this.state);
    },
    render: function() {
      return React.createElement("div", null, React.createElement("div", {
        "className": "form-group"
      }, React.createElement("label", {
        "htmlFor": "rg-number",
        "className": "col-sm-4 control-label"
      }, "\u673a\u5668\u4eba\u603b\u6570"), React.createElement("div", {
        "className": "col-sm-8"
      }, React.createElement("input", {
        "id": "rg-number",
        "className": "form-control",
        "ref": "botnumber",
        "defaultValue": this.state.botnumber,
        "name": "number",
        "type": "number",
        "min": "1",
        "onChange": this.botnumberChange
      }))), React.createElement("div", {
        "className": "form-group"
      }, React.createElement("label", {
        "htmlFor": "rg-oncenumber",
        "className": "col-sm-4 control-label"
      }, "\u673a\u5668\u4eba\u5355\u6b21\u6700\u5927\u4ea7\u91cf"), React.createElement("div", {
        "className": "col-sm-8"
      }, React.createElement("input", {
        "id": "rg-oncenumber",
        "className": "form-control",
        "ref": "oncenumber",
        "defaultValue": this.state.oncenumber,
        "name": "oncenumber",
        "type": "number",
        "min": "1",
        "onChange": this.oncenumberChange
      }))), React.createElement("div", {
        "className": "form-group"
      }, React.createElement("label", {
        "htmlFor": "rg-sleep",
        "className": "col-sm-4 control-label"
      }, "Sleep\u8303\u56f4"), React.createElement("div", {
        "className": "col-sm-8"
      }, React.createElement("input", {
        "id": "rg-sleep",
        "className": "form-control",
        "ref": "sleep",
        "defaultValue": this.state.sleep,
        "name": "sleep",
        "type": "number",
        "min": "2",
        "onChange": this.sleepChange
      }))), React.createElement("button", {
        "type": "submit",
        "className": "btn btn-default",
        "onClick": this.handleSubmit
      }, "Submit"));
    }
  });

  BotGenerator = React.createClass({displayName: "BotGenerator",
    getInitialState: function() {
      return {
        n: {
          SimpleGenerator: React.createElement(SimpleGenerator, null),
          RandomGenerator: React.createElement(RandomGenerator, null)
        }
      };
    },
    make: function() {
      return $.map(this.state.n, function(v, key) {
        return React.createElement(TabPane, {
          "key": key,
          "eventKey": key,
          "tab": key
        }, v);
      });
    },
    render: function() {
      return React.createElement(TabbedArea, {
        "defaultActiveKey": "SimpleGenerator"
      }, this.make());
    }
  });

  React.render(React.createElement(BotGenerator, null), document.getElementById('reactbot'));

}).call(this);
